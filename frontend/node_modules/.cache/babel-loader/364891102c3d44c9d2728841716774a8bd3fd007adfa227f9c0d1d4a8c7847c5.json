{"ast":null,"code":"import _objectSpread from\"C:/web_ai/react-workspace/STrio_LungMate_FE/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import AuthLayout from'../../components/AuthLayout';import instance from\"services/api/client\";import styles from'../../styles/features/auth/Auth.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SignUp(_ref){let{onNavigate}=_ref;const[confirmPassword,setConfirmPassword]=useState('');const[error,setError]=useState('');const[successMessage,setSuccessMessage]=useState('');// ✅ 성공 메시지 상태 추가\nconst[members,setMembers]=useState({userId:\"\",passwd:\"\",userName:\"\",email:\"\"});const handleValueChange=e=>{setMembers(prev=>{return _objectSpread(_objectSpread({},prev),{},{[e.target.name]:e.target.value});});};const onSubmit=async e=>{e.preventDefault();setError('');if(!members.userId||!members.passwd||!members.userName||!members.email){setError(\"모든 항목을 입력해주세요.\");return;}if(members.userId.length<4){// 최소 길이 설정\nsetError(\"아이디는 4자 이상이어야 합니다.\");return;}if(members.passwd.length<4){// 최소 길이 설정\nsetError(\"비밀번호는 4자 이상이어야 합니다.\");return;}if(members.passwd!==confirmPassword){setError(\"비밀번호가 일치하지 않습니다.\");return;}await instance.post(\"/member/signup\",members).then(response=>{console.log(response.data);// alert 대신 커스텀 메시지 표시\nsetSuccessMessage(\"회원가입이 성공적으로 완료되었습니다!\");setTimeout(()=>{setSuccessMessage('');onNavigate('login');},2000);// 2초 후 로그인 화면 이동\n}).catch(error=>{console.log(\"signup 오류:\",error.message);});};return/*#__PURE__*/_jsxs(AuthLayout,{title:\"\\uD68C\\uC6D0\\uAC00\\uC785\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.formLabel,children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"userId\",value:members.userId,onChange:handleValueChange,className:styles.formInput})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.formLabel,children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"passwd\",value:members.passwd,onChange:handleValueChange,className:styles.formInput})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.formLabel,children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),className:styles.formInput})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.formLabel,children:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"userName\",value:members.userName,onChange:handleValueChange,className:styles.formInput})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:styles.formLabel,children:\"\\uC774\\uBA54\\uC77C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:members.email,onChange:handleValueChange,className:styles.formInput})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:styles.errorMessage,children:error}),successMessage&&/*#__PURE__*/_jsx(\"p\",{className:styles.successMessage,children:successMessage}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.btnSecondary,children:\"\\uAC00\\uC785\\uD558\\uAE30\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>onNavigate('login'),className:styles.linkPrimary,children:\"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uC73C\\uC2E0\\uAC00\\uC694? \\uB85C\\uADF8\\uC778\"})})]});}export default SignUp;","map":{"version":3,"names":["React","useState","AuthLayout","instance","styles","jsx","_jsx","jsxs","_jsxs","SignUp","_ref","onNavigate","confirmPassword","setConfirmPassword","error","setError","successMessage","setSuccessMessage","members","setMembers","userId","passwd","userName","email","handleValueChange","e","prev","_objectSpread","target","name","value","onSubmit","preventDefault","length","post","then","response","console","log","data","setTimeout","catch","message","title","children","className","formLabel","type","onChange","formInput","errorMessage","btnSecondary","onClick","linkPrimary"],"sources":["C:/web_ai/react-workspace/STrio_LungMate_FE/frontend/src/features/auth/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AuthLayout from '../../components/AuthLayout';\r\nimport instance from \"services/api/client\";\r\nimport styles from '../../styles/features/auth/Auth.module.css';\r\n\r\nfunction SignUp({ onNavigate }) {\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState(''); // ✅ 성공 메시지 상태 추가\r\n    \r\n    const [members, setMembers] = useState({\r\n        userId: \"\",\r\n        passwd: \"\",\r\n        userName: \"\",\r\n        email: \"\",\r\n    });    \r\n\r\n    const handleValueChange = (e) => {\r\n        setMembers((prev) => {\r\n        return { ...prev, [e.target.name]: e.target.value };\r\n        });\r\n    };    \r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        if (!members.userId || !members.passwd || !members.userName || !members.email) {\r\n            setError(\"모든 항목을 입력해주세요.\");\r\n            return;\r\n        }\r\n        if (members.userId.length < 4) { // 최소 길이 설정\r\n            setError(\"아이디는 4자 이상이어야 합니다.\");\r\n            return;\r\n        }           \r\n        if (members.passwd.length < 4) { // 최소 길이 설정\r\n            setError(\"비밀번호는 4자 이상이어야 합니다.\");\r\n            return;\r\n        }        \r\n        if (members.passwd !== confirmPassword) {\r\n            setError(\"비밀번호가 일치하지 않습니다.\");\r\n            return;\r\n        }\r\n        \r\n        await instance\r\n        .post(`/member/signup`, members)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            // alert 대신 커스텀 메시지 표시\r\n            setSuccessMessage(\"회원가입이 성공적으로 완료되었습니다!\");\r\n            setTimeout(() => {\r\n                setSuccessMessage('');\r\n                onNavigate('login');\r\n            }, 2000); // 2초 후 로그인 화면 이동\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"signup 오류:\", error.message);\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <AuthLayout title=\"회원가입\">        \r\n            <form onSubmit={onSubmit} className=\"space-y-4\">\r\n                <div>\r\n                    <label className={styles.formLabel}>아이디</label>\r\n                    <input type=\"text\" name=\"userId\" value={members.userId} onChange={handleValueChange} className={styles.formInput} />\r\n                </div>\r\n                <div>\r\n                    <label className={styles.formLabel}>비밀번호</label>\r\n                    <input type=\"password\" name=\"passwd\" value={members.passwd} onChange={handleValueChange} className={styles.formInput} />\r\n                </div>\r\n                <div>\r\n                    <label className={styles.formLabel}>비밀번호 확인</label>\r\n                    <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} className={styles.formInput} />\r\n                </div>\r\n                <div>\r\n                    <label className={styles.formLabel}>이름</label>\r\n                    <input type=\"text\" name=\"userName\" value={members.userName} onChange={handleValueChange} className={styles.formInput} />\r\n                </div>\r\n                <div>\r\n                    <label className={styles.formLabel}>이메일</label>\r\n                    <input type=\"email\" name=\"email\" value={members.email} onChange={handleValueChange} className={styles.formInput} />\r\n                </div>\r\n\r\n                {error && <p className={styles.errorMessage}>{error}</p>}\r\n                {successMessage && <p className={styles.successMessage}>{successMessage}</p>}\r\n                \r\n                <button type=\"submit\" className={styles.btnSecondary}>\r\n                    가입하기\r\n                </button>\r\n            </form>\r\n            <div className=\"text-center mt-6\">\r\n                <button onClick={() => onNavigate('login')} className={styles.linkPrimary}>\r\n                    이미 계정이 있으신가요? 로그인\r\n                </button>\r\n            </div>\r\n        </AuthLayout>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}