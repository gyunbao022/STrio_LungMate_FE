{"ast":null,"code":"import _objectSpread from\"D:/Medical AI/2nd_project_STrio/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import api from'../token/interceptors';import styles from'../styles/pages/Notice.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Notice(_ref){let{currentUser,initialNotice}=_ref;const[selectedNotice,setSelectedNotice]=useState(initialNotice||null);const[notices,setNotices]=useState([]);const[loading,setLoading]=useState(false);const[isEditing,setIsEditing]=useState(false);const[editedNotice,setEditedNotice]=useState(null);const[isSaving,setIsSaving]=useState(false);// 1. fetchNotices (useCallback 유지 - 올바른 코드)\nconst fetchNotices=useCallback(async()=>{setLoading(true);try{const response=await api.get('/notice/list/1');const sortedNotices=response.data.noticeList.sort((a,b)=>b.noticeId-a.noticeId);setNotices(sortedNotices);}catch(error){console.error(\"공지사항을 불러오는 중 오류가 발생했습니다:\",error);alert(\"공지사항을 불러오는 데 실패했습니다.\");}finally{setLoading(false);}},[]);// 2. useEffect (useCallback 의존성 유지)\nuseEffect(()=>{fetchNotices();},[fetchNotices]);useEffect(()=>{setSelectedNotice(initialNotice||null);},[initialNotice]);// 실제 사용자 권한 체크 (role === 'A'는 관리자)\nconst isAdmin=currentUser&&currentUser.role==='A';// 4. handleCreate, handleEdit (유지)\nconst handleCreate=()=>{setEditedNotice({title:'',cont:''});setIsEditing(true);setSelectedNotice(null);};const handleEdit=notice=>{setEditedNotice(_objectSpread({},notice));setIsEditing(true);setSelectedNotice(null);};// 5. handleDelete (유지 - 올바른 코드)\nconst handleDelete=async noticeId=>{if(window.confirm(\"정말로 이 공지사항을 삭제하시겠습니까?\")){setIsSaving(true);try{await api.delete(\"/notice/delete/\".concat(noticeId));alert(\"공지사항이 삭제되었습니다.\");setSelectedNotice(null);await fetchNotices();// 목록 새로고침\n}catch(error){console.error(\"공지사항 삭제 중 오류:\",error);alert(\"삭제 중 오류가 발생했습니다.\");}finally{setIsSaving(false);}}};const handleSave=async e=>{e.preventDefault();setIsSaving(true);// 디버깅: 현재 사용자 정보 확인\nconsole.log(\"=== 공지사항 저장 시작 ===\");console.log(\"currentUser:\",currentUser);console.log(\"localStorage userId:\",localStorage.getItem(\"userId\"));console.log(\"localStorage memberName:\",localStorage.getItem(\"memberName\"));console.log(\"localStorage roleCd:\",localStorage.getItem(\"roleCd\"));console.log(\"localStorage Authorization:\",localStorage.getItem(\"Authorization\"));const isNew=!editedNotice.noticeId;const formData=new FormData();formData.append('title',editedNotice.title);formData.append('cont',editedNotice.cont);// 로그인된 사용자 ID 확인\nif(!currentUser||!currentUser.memberId){console.error(\"로그인 정보를 찾을 수 없습니다! currentUser:\",currentUser);alert(\"로그인 정보가 없어 저장할 수 없습니다. 다시 로그인해주세요.\");setIsSaving(false);return;}// memberId를 전송 (백엔드에서 필요한 필드명 확인 필요)\nformData.append('memberId',currentUser.memberId);console.log(\"전송할 데이터:\");console.log(\"- title:\",editedNotice.title);console.log(\"- cont:\",editedNotice.cont);console.log(\"- memberId:\",currentUser.memberId);console.log(\"- isNew:\",isNew);try{if(isNew){console.log(\"새 공지사항 작성 API 호출...\");const response=await api.post('/notice/write',formData,{headers:{'Content-Type':'multipart/form-data'}});console.log(\"작성 성공:\",response.data);alert('공지사항이 성공적으로 작성되었습니다.');}else{formData.append('noticeId',editedNotice.noticeId);console.log(\"공지사항 수정 API 호출... noticeId:\",editedNotice.noticeId);const response=await api.put('/notice/update',formData,{headers:{'Content-Type':'multipart/form-data'}});console.log(\"수정 성공:\",response.data);alert('공지사항이 성공적으로 수정되었습니다.');}setIsEditing(false);setEditedNotice(null);setSelectedNotice(null);await fetchNotices();// 목록 새로고침\n}catch(error){console.error(\"=== 공지사항 저장 실패 ===\");console.error(\"에러 객체:\",error);console.error(\"에러 응답:\",error.response);console.error(\"에러 요청:\",error.request);console.error(\"에러 메시지:\",error.message);if(error.response){const status=error.response.status;const data=error.response.data;console.error(\"HTTP 상태 코드:\",status);console.error(\"응답 데이터:\",data);if(status===403){alert(\"저장 권한이 없습니다. 관리자 계정으로 로그인해주세요.\");}else if(status===401){alert(\"인증이 만료되었습니다. 다시 로그인해주세요.\");}else if(status===500){alert(\"\\uC11C\\uBC84 \\uB0B4\\uBD80 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\\n\\uC624\\uB958 \\uB0B4\\uC6A9: \".concat(data.message||'알 수 없는 오류'));}else if(status===400){alert(\"\\uC798\\uBABB\\uB41C \\uC694\\uCCAD\\uC785\\uB2C8\\uB2E4.\\n\\uC624\\uB958 \\uB0B4\\uC6A9: \".concat(data.message||'입력값을 확인해주세요.'));}else{alert(\"\\uC800\\uC7A5 \\uC911 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4. (\".concat(status,\")\\n\").concat(data.message||''));}}else if(error.request){console.error(\"요청이 전송되었으나 응답을 받지 못함\");alert(\"서버와 연결할 수 없습니다. 네트워크 연결을 확인해주세요.\");}else{console.error(\"요청 설정 중 오류 발생\");alert(\"저장 중 오류가 발생했습니다.\");}}finally{setIsSaving(false);console.log(\"=== 공지사항 저장 종료 ===\");}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:styles.loadingText,children:\"\\uB85C\\uB529 \\uC911...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[/*#__PURE__*/_jsx(\"h1\",{className:styles.title,children:\"\\uACF5\\uC9C0\\uC0AC\\uD56D\"}),isAdmin&&!isEditing&&/*#__PURE__*/_jsx(\"button\",{onClick:handleCreate,className:styles.createButton,children:\"\\uAE00\\uC4F0\\uAE30\"})]}),isEditing?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSave,className:styles.editForm,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editedNotice.title,onChange:e=>setEditedNotice(_objectSpread(_objectSpread({},editedNotice),{},{title:e.target.value})),placeholder:\"\\uC81C\\uBAA9\",className:styles.formInput,required:true,disabled:isSaving}),/*#__PURE__*/_jsx(\"textarea\",{value:editedNotice.cont,onChange:e=>setEditedNotice(_objectSpread(_objectSpread({},editedNotice),{},{cont:e.target.value})),placeholder:\"\\uB0B4\\uC6A9\",className:styles.formTextarea,required:true,disabled:isSaving}),/*#__PURE__*/_jsxs(\"div\",{className:styles.formActions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setIsEditing(false),className:styles.formCancelButton,disabled:isSaving,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.formSaveButton,disabled:isSaving,children:isSaving?'저장 중...':'저장'})]})]}):selectedNotice?/*#__PURE__*/_jsxs(\"div\",{className:styles.detailContainer,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.detailTitle,children:selectedNotice.title}),/*#__PURE__*/_jsxs(\"p\",{className:styles.detailMeta,children:[\"\\uC791\\uC131\\uC77C: \",new Date(selectedNotice.createdAt).toLocaleDateString()]}),/*#__PURE__*/_jsx(\"div\",{className:styles.detailContent,children:selectedNotice.cont}),/*#__PURE__*/_jsxs(\"div\",{className:styles.detailActions,children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedNotice(null),className:styles.backButton,children:\"\\uBAA9\\uB85D\\uC73C\\uB85C\"}),isAdmin&&/*#__PURE__*/_jsxs(\"div\",{className:styles.adminActions,children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEdit(selectedNotice),className:styles.editButton,children:\"\\uC218\\uC815\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(selectedNotice.noticeId),className:styles.deleteButton,disabled:isSaving,children:isSaving?'삭제 중...':'삭제'})]})]})]}):/*#__PURE__*/_jsx(\"div\",{className:styles.tableContainer,children:/*#__PURE__*/_jsxs(\"table\",{className:styles.table,children:[/*#__PURE__*/_jsx(\"thead\",{className:styles.tableHead,children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"\\uC791\\uC131\\uC77C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:notices.map(notice=>/*#__PURE__*/_jsxs(\"tr\",{className:styles.tableRow,children:[/*#__PURE__*/_jsx(\"td\",{children:notice.noticeId}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedNotice(notice),className:styles.tableButton,children:notice.title})}),/*#__PURE__*/_jsx(\"td\",{children:new Date(notice.createdAt).toLocaleDateString()})]},notice.noticeId))})]})})]});}export default Notice;","map":{"version":3,"names":["React","useState","useEffect","useCallback","api","styles","jsx","_jsx","jsxs","_jsxs","Notice","_ref","currentUser","initialNotice","selectedNotice","setSelectedNotice","notices","setNotices","loading","setLoading","isEditing","setIsEditing","editedNotice","setEditedNotice","isSaving","setIsSaving","fetchNotices","response","get","sortedNotices","data","noticeList","sort","a","b","noticeId","error","console","alert","isAdmin","role","handleCreate","title","cont","handleEdit","notice","_objectSpread","handleDelete","window","confirm","delete","concat","handleSave","e","preventDefault","log","localStorage","getItem","isNew","formData","FormData","append","memberId","post","headers","put","request","message","status","className","loadingText","children","container","header","onClick","createButton","onSubmit","editForm","type","value","onChange","target","placeholder","formInput","required","disabled","formTextarea","formActions","formCancelButton","formSaveButton","detailContainer","detailTitle","detailMeta","Date","createdAt","toLocaleDateString","detailContent","detailActions","backButton","adminActions","editButton","deleteButton","tableContainer","table","tableHead","scope","map","tableRow","tableButton"],"sources":["D:/Medical AI/2nd_project_STrio/frontend/src/pages/Notice.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport api from '../token/interceptors';\r\nimport styles from '../styles/pages/Notice.module.css';\r\n\r\nfunction Notice({ currentUser, initialNotice }) {\r\n    const [selectedNotice, setSelectedNotice] = useState(initialNotice || null);\r\n    const [notices, setNotices] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editedNotice, setEditedNotice] = useState(null);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    // 1. fetchNotices (useCallback 유지 - 올바른 코드)\r\n    const fetchNotices = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await api.get('/notice/list/1');\r\n            const sortedNotices = response.data.noticeList.sort((a, b) => b.noticeId - a.noticeId);\r\n            setNotices(sortedNotices);\r\n        } catch (error) {\r\n            console.error(\"공지사항을 불러오는 중 오류가 발생했습니다:\", error);\r\n            alert(\"공지사항을 불러오는 데 실패했습니다.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []); \r\n\r\n    // 2. useEffect (useCallback 의존성 유지)\r\n    useEffect(() => {\r\n        fetchNotices();\r\n    }, [fetchNotices]); \r\n\r\n    useEffect(() => {\r\n        setSelectedNotice(initialNotice || null);\r\n    }, [initialNotice]);\r\n\r\n    // 실제 사용자 권한 체크 (role === 'A'는 관리자)\r\n    const isAdmin = currentUser && currentUser.role === 'A';\r\n\r\n    // 4. handleCreate, handleEdit (유지)\r\n    const handleCreate = () => {\r\n        setEditedNotice({ title: '', cont: '' });\r\n        setIsEditing(true);\r\n        setSelectedNotice(null);\r\n    };\r\n\r\n    const handleEdit = (notice) => {\r\n        setEditedNotice({ ...notice });\r\n        setIsEditing(true);\r\n        setSelectedNotice(null);\r\n    };\r\n\r\n    // 5. handleDelete (유지 - 올바른 코드)\r\n    const handleDelete = async (noticeId) => {\r\n        if (window.confirm(\"정말로 이 공지사항을 삭제하시겠습니까?\")) {\r\n            setIsSaving(true); \r\n            try {\r\n                await api.delete(`/notice/delete/${noticeId}`);\r\n                alert(\"공지사항이 삭제되었습니다.\");\r\n                setSelectedNotice(null);\r\n                await fetchNotices(); // 목록 새로고침\r\n            } catch (error) {\r\n                console.error(\"공지사항 삭제 중 오류:\", error);\r\n                alert(\"삭제 중 오류가 발생했습니다.\");\r\n            } finally {\r\n                setIsSaving(false); \r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSave = async (e) => {\r\n        e.preventDefault();\r\n        setIsSaving(true); \r\n\r\n        // 디버깅: 현재 사용자 정보 확인\r\n        console.log(\"=== 공지사항 저장 시작 ===\");\r\n        console.log(\"currentUser:\", currentUser);\r\n        console.log(\"localStorage userId:\", localStorage.getItem(\"userId\"));\r\n        console.log(\"localStorage memberName:\", localStorage.getItem(\"memberName\"));\r\n        console.log(\"localStorage roleCd:\", localStorage.getItem(\"roleCd\"));\r\n        console.log(\"localStorage Authorization:\", localStorage.getItem(\"Authorization\"));\r\n\r\n        const isNew = !editedNotice.noticeId;\r\n        const formData = new FormData();\r\n        formData.append('title', editedNotice.title);\r\n        formData.append('cont', editedNotice.cont);\r\n\r\n        // 로그인된 사용자 ID 확인\r\n        if (!currentUser || !currentUser.memberId) {\r\n            console.error(\"로그인 정보를 찾을 수 없습니다! currentUser:\", currentUser);\r\n            alert(\"로그인 정보가 없어 저장할 수 없습니다. 다시 로그인해주세요.\");\r\n            setIsSaving(false);\r\n            return;\r\n        }\r\n        \r\n        // memberId를 전송 (백엔드에서 필요한 필드명 확인 필요)\r\n        formData.append('memberId', currentUser.memberId);\r\n        \r\n        console.log(\"전송할 데이터:\");\r\n        console.log(\"- title:\", editedNotice.title);\r\n        console.log(\"- cont:\", editedNotice.cont);\r\n        console.log(\"- memberId:\", currentUser.memberId);\r\n        console.log(\"- isNew:\", isNew);\r\n\r\n        try {\r\n            if (isNew) {\r\n                console.log(\"새 공지사항 작성 API 호출...\");\r\n                const response = await api.post('/notice/write', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                console.log(\"작성 성공:\", response.data);\r\n                alert('공지사항이 성공적으로 작성되었습니다.');\r\n            } else {\r\n                formData.append('noticeId', editedNotice.noticeId);\r\n                console.log(\"공지사항 수정 API 호출... noticeId:\", editedNotice.noticeId);\r\n                const response = await api.put('/notice/update', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                console.log(\"수정 성공:\", response.data);\r\n                alert('공지사항이 성공적으로 수정되었습니다.');\r\n            }\r\n\r\n            setIsEditing(false);\r\n            setEditedNotice(null);\r\n            setSelectedNotice(null);\r\n            await fetchNotices(); // 목록 새로고침\r\n\r\n        } catch (error) {\r\n            console.error(\"=== 공지사항 저장 실패 ===\");\r\n            console.error(\"에러 객체:\", error);\r\n            console.error(\"에러 응답:\", error.response);\r\n            console.error(\"에러 요청:\", error.request);\r\n            console.error(\"에러 메시지:\", error.message);\r\n            \r\n            if (error.response) {\r\n                const status = error.response.status;\r\n                const data = error.response.data;\r\n                \r\n                console.error(\"HTTP 상태 코드:\", status);\r\n                console.error(\"응답 데이터:\", data);\r\n                \r\n                if (status === 403) {\r\n                    alert(\"저장 권한이 없습니다. 관리자 계정으로 로그인해주세요.\");\r\n                } else if (status === 401) {\r\n                    alert(\"인증이 만료되었습니다. 다시 로그인해주세요.\");\r\n                } else if (status === 500) {\r\n                    alert(`서버 내부 오류가 발생했습니다.\\n오류 내용: ${data.message || '알 수 없는 오류'}`);\r\n                } else if (status === 400) {\r\n                    alert(`잘못된 요청입니다.\\n오류 내용: ${data.message || '입력값을 확인해주세요.'}`);\r\n                } else {\r\n                    alert(`저장 중 오류가 발생했습니다. (${status})\\n${data.message || ''}`);\r\n                }\r\n            } else if (error.request) {\r\n                console.error(\"요청이 전송되었으나 응답을 받지 못함\");\r\n                alert(\"서버와 연결할 수 없습니다. 네트워크 연결을 확인해주세요.\");\r\n            } else {\r\n                console.error(\"요청 설정 중 오류 발생\");\r\n                alert(\"저장 중 오류가 발생했습니다.\");\r\n            }\r\n        } finally {\r\n            setIsSaving(false);\r\n            console.log(\"=== 공지사항 저장 종료 ===\");\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className={styles.loadingText}>로딩 중...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.header}>\r\n                <h1 className={styles.title}>공지사항</h1>\r\n                {isAdmin && !isEditing && (\r\n                    <button onClick={handleCreate} className={styles.createButton}>\r\n                        글쓰기\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {isEditing ? (\r\n                <form onSubmit={handleSave} className={styles.editForm}>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={editedNotice.title}\r\n                        onChange={(e) => setEditedNotice({ ...editedNotice, title: e.target.value })}\r\n                        placeholder=\"제목\" \r\n                        className={styles.formInput}\r\n                        required \r\n                        disabled={isSaving} \r\n                    />\r\n                    <textarea \r\n                        value={editedNotice.cont}\r\n                        onChange={(e) => setEditedNotice({ ...editedNotice, cont: e.target.value })}\r\n                        placeholder=\"내용\" \r\n                        className={styles.formTextarea}\r\n                        required \r\n                        disabled={isSaving} \r\n                    />\r\n                    <div className={styles.formActions}>\r\n                        <button type=\"button\" onClick={() => setIsEditing(false)}\r\n                            className={styles.formCancelButton}\r\n                            disabled={isSaving}> \r\n                            취소\r\n                        </button>\r\n                        <button type=\"submit\"\r\n                            className={styles.formSaveButton}\r\n                            disabled={isSaving}>\r\n                            {isSaving ? '저장 중...' : '저장'} \r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            ) : selectedNotice ? (\r\n                <div className={styles.detailContainer}>\r\n                    <h2 className={styles.detailTitle}>{selectedNotice.title}</h2>\r\n                    <p className={styles.detailMeta}>\r\n                        작성일: {new Date(selectedNotice.createdAt).toLocaleDateString()}\r\n                    </p>\r\n                    <div className={styles.detailContent}>\r\n                        {selectedNotice.cont}\r\n                    </div>\r\n                    <div className={styles.detailActions}>\r\n                        <button onClick={() => setSelectedNotice(null)}\r\n                            className={styles.backButton}>\r\n                            목록으로\r\n                        </button>\r\n                        {isAdmin && (\r\n                            <div className={styles.adminActions}>\r\n                                <button onClick={() => handleEdit(selectedNotice)}\r\n                                    className={styles.editButton}>\r\n                                    수정\r\n                                </button>\r\n                                <button onClick={() => handleDelete(selectedNotice.noticeId)}\r\n                                    className={styles.deleteButton}\r\n                                    disabled={isSaving}> \r\n                                    {isSaving ? '삭제 중...' : '삭제'}\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className={styles.tableContainer}>\r\n                    <table className={styles.table}>\r\n                        <thead className={styles.tableHead}>\r\n                            <tr>\r\n                                <th scope=\"col\">번호</th>\r\n                                <th scope=\"col\">제목</th>\r\n                                <th scope=\"col\">작성일</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {notices.map(notice => (\r\n                                <tr key={notice.noticeId} className={styles.tableRow}>\r\n                                    <td>{notice.noticeId}</td>\r\n                                    <td>\r\n                                        <button onClick={() => setSelectedNotice(notice)} className={styles.tableButton}>\r\n                                            {notice.title}\r\n                                        </button>\r\n                                    </td>\r\n                                    <td>{new Date(notice.createdAt).toLocaleDateString()}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}