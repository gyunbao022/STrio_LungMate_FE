{"ast":null,"code":"var _jsxFileName = \"D:\\\\Medical AI\\\\2nd_project_STrio\\\\frontend\\\\src\\\\pages\\\\XRayUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// [오류 해결] 'Could not resolve' 오류는 이 import 경로에서 발생했습니다.\n// 이는 사용자의 프로젝트 파일 구조와 관련된 빌드 시점의 오류입니다.\n// 이 파일은 인증 토큰과 같은 앱의 특정 로직을 포함하고 있을 것이므로 원래대로 복원합니다.\n// !!중요!!: 현재 XRayUpload.jsx 파일 위치에서 '../token/interceptors' 경로가 올바른지\n// 사용자의 프로젝트 폴더 구조를 직접 확인해 주세요.\n// import api from '../token/interceptors'; // axios 인스턴스 import\nimport axios from 'axios'; // axios 인스턴스 import\n\n// '../token/interceptors' 경로를 확인할 수 없어, 표준 axios로 대체합니다.\n// 실제 환경에서는 interceptors 파일 경로를 확인해야 합니다.\n/*\r\nconst api = axios.create({\r\n    // baseURL: 'http://localhost:8080' // 필요시 기본 URL 설정\r\n    // 실제 interceptors 로직이 있다면 여기에 추가해야 합니다.\r\n});\r\n*/\n\n// --- [수정] ---\n// 사용자께서 제공해주신 Interceptor 코드를 여기에 직접 삽입합니다.\n// 이렇게 하면 'Could not resolve' import 경로 오류를 근본적으로 해결할 수 있습니다.\n\n/**\r\n* ✅ AccessToken 재발급 함수\r\n* RefreshToken을 이용해 새로운 AccessToken을 발급받습니다.\r\n*/\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst refreshAccessToken = async () => {\n  try {\n    const refreshToken = localStorage.getItem(\"Authorization-refresh\");\n    if (!refreshToken) throw new Error(\"refreshToken 없음\");\n    const response = await axios.post(\"/auth/refresh\", {}, {\n      baseURL: \"http://localhost:8090\",\n      headers: {\n        \"Authorization-refresh\": refreshToken\n      },\n      withCredentials: true\n    });\n    return response.data.accessToken;\n  } catch (error) {\n    console.error(\"❌ refreshToken 갱신 실패:\", error);\n    throw error;\n  }\n};\n\n/**\r\n* ✅ Axios 공통 인스턴스\r\n*/\nconst instance = axios.create({\n  baseURL: \"http://localhost:8090\",\n  withCredentials: true // 쿠키 및 인증정보 포함\n});\n\n/**\r\n* ✅ 요청 인터셉터\r\n* 모든 요청에 AccessToken 자동 포함\r\n*/\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"Authorization\");\n  if (token) {\n    config.headers[\"Authorization\"] = token; // ex) \"Bearer eyJ...\"\n  }\n  return config;\n}, error => Promise.reject(error));\n\n/**\r\n* ✅ 응답 인터셉터\r\n* 401(Unauthorized) 발생 시 AccessToken 재발급 처리\r\n*/\ninstance.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n\n  /**\r\n  * 1️⃣ 로그인/회원가입/아이디찾기 등 비인증 요청은 예외처리\r\n  * -> 세션 만료 메시지 표시 X\r\n  */\n  const unauthenticatedEndpoints = [\"/login\", \"/signup\", \"/find-account\"];\n  if (unauthenticatedEndpoints.some(url => originalRequest.url.includes(url))) {\n    return Promise.reject(error); // 그대로 Login.jsx 등으로 전달\n  }\n\n  /**\r\n  * 2️⃣ AccessToken 만료로 인한 401 에러 처리\r\n  */\n  if (error.response && error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      // AccessToken 재발급\n      const newAccessToken = await refreshAccessToken();\n      const bearerToken = `Bearer ${newAccessToken}`;\n\n      // 새 토큰 저장\n      localStorage.setItem(\"Authorization\", bearerToken);\n\n      // 요청 헤더 갱신\n      originalRequest.headers[\"Authorization\"] = bearerToken;\n      if (originalRequest.data instanceof FormData && !originalRequest.headers[\"Content-Type\"]) {\n        originalRequest.headers[\"Content-Type\"] = \"multipart/form-data\";\n      }\n\n      // ✅ 재요청 실행\n      return instance(originalRequest);\n    } catch (refreshError) {\n      console.error(\"❌ refreshToken 재발급 실패:\", refreshError);\n\n      /**\r\n      * 3️⃣ refreshToken도 만료되었거나 재발급 실패 → 로그아웃 처리\r\n      */\n      localStorage.removeItem(\"Authorization\");\n      localStorage.removeItem(\"Authorization-refresh\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"userName\");\n      localStorage.removeItem(\"roleCd\");\n      localStorage.removeItem(\"isLogin\");\n\n      // [수정] alert()는 이 환경에서 작동하지 않습니다. console.error로 대체합니다.\n      // alert(\"세션이 만료되었습니다. 다시 로그인해주세요.\");\n      console.error(\"세션이 만료되었습니다. 다시 로그인해주세요.\");\n\n      // React SPA에서는 전체 새로고침 없이 상태만 초기화\n      return Promise.reject(refreshError);\n    }\n  }\n\n  /**\r\n  * 4️⃣ 기타 오류는 그대로 상위로 전파\r\n  */\n  return Promise.reject(error);\n});\n\n// --- [수정 완료] ---\n\nfunction XRayUpload({\n  currentUser\n}) {\n  _s();\n  const [patientId, setPatientId] = useState('');\n  const [doctorId, setDoctorId] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [uploadStatus, setUploadStatus] = useState(null); // 'success', 'error', or null\n\n  useEffect(() => {\n    if (!imageFile) {\n      setPreviewUrl(null);\n      return;\n    }\n    const objectUrl = URL.createObjectURL(imageFile);\n    setPreviewUrl(objectUrl);\n\n    // Clean up the object URL on unmount\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [imageFile]);\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImageFile(e.target.files[0]);\n      setUploadStatus(null);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!patientId || !doctorId || !imageFile) {\n      alert('환자 ID, 담당의사 ID, 그리고 이미지 파일을 모두 입력해주세요.');\n      return;\n    }\n    setIsLoading(true);\n    setUploadStatus(null);\n\n    // FormData 객체 생성\n    const formData = new FormData();\n    formData.append('patientId', patientId);\n    formData.append('doctorId', doctorId);\n    formData.append('xrayImage', imageFile); // 'xrayImage'는 XrayImageDTO의 MultipartFile 필드명과 일치해야 함\n    formData.append('uploaderId', currentUser.memberId); // 'uploaderId'는 XrayImageDTO의 uploaderId 필드명과 일치해야 함\n\n    try {\n      // --- 백엔드 API 호출 ---\n      // 'Content-Type': 'multipart/form-data' 헤더를 명시적으로 설정하지 않습니다.\n      // 브라우저가 FormData 객체를 전송할 때 자동으로 올바른 Content-Type과 boundary를 설정합니다.\n      // 이 부분을 수정하는 것이 핵심입니다.\n      // [수정] 'api'에서 'instance'로 변경합니다.\n      const response = await instance.post('/xray/upload', formData);\n\n      // 백엔드가 \"1\"을 body로 응답하므로, response.data === \"1\" 로 확인하는 것이 더 정확할 수 있습니다.\n      if (response.status !== 200 || response.data !== \"1\") {\n        throw new Error('업로드 실패');\n      }\n      console.log('Upload success:', response.data);\n      setUploadStatus('success');\n      // 성공 후 폼 초기화\n      setPatientId('');\n      setDoctorId('');\n      setImageFile(null);\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadStatus('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"text-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl sm:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-500\",\n        children: \"X-Ray \\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 mt-2\",\n        children: \"\\uD658\\uC790\\uC758 X-Ray \\uC774\\uBBF8\\uC9C0\\uC640 \\uC815\\uBCF4\\uB97C \\uB4F1\\uB85D\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"w-full glassmorphism rounded-2xl shadow-lg p-6 sm:p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"patientId\",\n                className: \"block text-sm font-medium text-gray-300 mb-2\",\n                children: \"\\uD658\\uC790 ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"patientId\",\n                value: patientId,\n                onChange: e => setPatientId(e.target.value),\n                className: \"w-full bg-gray-800/60 border border-gray-700 rounded-lg px-3 py-2 text-white focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500 transition\",\n                placeholder: \"\\uC608: P12345\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"doctorId\",\n                className: \"block text-sm font-medium text-gray-300 mb-2\",\n                children: \"\\uB2F4\\uB2F9 \\uC758\\uC0AC ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"doctorId\",\n                value: doctorId,\n                onChange: e => setDoctorId(e.target.value),\n                className: \"w-full bg-gray-800/60 border border-gray-700 rounded-lg px-3 py-2 text-white focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500 transition\",\n                placeholder: \"\\uC608: D67890\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-300 mb-2\",\n              children: \"X-Ray \\uC774\\uBBF8\\uC9C0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full h-64 border-2 border-dashed border-gray-600 rounded-lg flex items-center justify-center relative overflow-hidden bg-gray-900/50\",\n              children: [previewUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: previewUrl,\n                alt: \"X-ray preview\",\n                className: \"h-full w-full object-contain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center text-gray-400\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-upload text-4xl mb-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\uD30C\\uC77C\\uC744 \\uB4DC\\uB798\\uADF8\\uD558\\uAC70\\uB098 \\uD074\\uB9AD\\uD558\\uC5EC \\uC5C5\\uB85C\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: \"absolute top-0 left-0 w-full h-full opacity-0 cursor-pointer\",\n                accept: \"image/png, image/jpeg, image/dicom\",\n                onChange: handleFileChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isLoading,\n            className: \"w-full bg-cyan-600 text-white font-bold py-3 px-4 rounded-lg hover:bg-cyan-700 disabled:bg-gray-500 disabled:cursor-not-allowed transition-colors duration-300 flex items-center justify-center\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-spinner fa-spin mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 37\n              }, this), \" \\uC5C5\\uB85C\\uB4DC \\uC911...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-cloud-upload-alt mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 37\n              }, this), \" \\uC815\\uBCF4 \\uB4F1\\uB85D \\uBC0F \\uC5C5\\uB85C\\uB4DC\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mt-4 text-center p-3 rounded-lg ${uploadStatus === 'success' ? 'bg-green-500/20 text-green-300' : 'bg-red-500/20 text-red-300'}`,\n        children: uploadStatus === 'success' ? '성공적으로 업로드되었습니다.' : '업로드 중 오류가 발생했습니다.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n}\n_s(XRayUpload, \"Ucn8wkLqazLGCZl6Bu0mVuX8Q/8=\");\n_c = XRayUpload;\nexport default XRayUpload;\nvar _c;\n$RefreshReg$(_c, \"XRayUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","refreshAccessToken","refreshToken","localStorage","getItem","Error","response","post","baseURL","headers","withCredentials","data","accessToken","error","console","instance","create","interceptors","request","use","config","token","Promise","reject","originalRequest","unauthenticatedEndpoints","some","url","includes","status","_retry","newAccessToken","bearerToken","setItem","FormData","refreshError","removeItem","XRayUpload","currentUser","_s","patientId","setPatientId","doctorId","setDoctorId","imageFile","setImageFile","previewUrl","setPreviewUrl","isLoading","setIsLoading","uploadStatus","setUploadStatus","objectUrl","URL","createObjectURL","revokeObjectURL","handleFileChange","e","target","files","handleSubmit","preventDefault","alert","formData","append","memberId","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","placeholder","required","src","alt","accept","disabled","_c","$RefreshReg$"],"sources":["D:/Medical AI/2nd_project_STrio/frontend/src/pages/XRayUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// [오류 해결] 'Could not resolve' 오류는 이 import 경로에서 발생했습니다.\r\n// 이는 사용자의 프로젝트 파일 구조와 관련된 빌드 시점의 오류입니다.\r\n// 이 파일은 인증 토큰과 같은 앱의 특정 로직을 포함하고 있을 것이므로 원래대로 복원합니다.\r\n// !!중요!!: 현재 XRayUpload.jsx 파일 위치에서 '../token/interceptors' 경로가 올바른지\r\n// 사용자의 프로젝트 폴더 구조를 직접 확인해 주세요.\r\n// import api from '../token/interceptors'; // axios 인스턴스 import\r\nimport axios from 'axios'; // axios 인스턴스 import\r\n\r\n// '../token/interceptors' 경로를 확인할 수 없어, 표준 axios로 대체합니다.\r\n// 실제 환경에서는 interceptors 파일 경로를 확인해야 합니다.\r\n/*\r\nconst api = axios.create({\r\n    // baseURL: 'http://localhost:8080' // 필요시 기본 URL 설정\r\n    // 실제 interceptors 로직이 있다면 여기에 추가해야 합니다.\r\n});\r\n*/\r\n\r\n// --- [수정] ---\r\n// 사용자께서 제공해주신 Interceptor 코드를 여기에 직접 삽입합니다.\r\n// 이렇게 하면 'Could not resolve' import 경로 오류를 근본적으로 해결할 수 있습니다.\r\n\r\n/**\r\n* ✅ AccessToken 재발급 함수\r\n* RefreshToken을 이용해 새로운 AccessToken을 발급받습니다.\r\n*/\r\nconst refreshAccessToken = async () => {\r\ntry {\r\n    const refreshToken = localStorage.getItem(\"Authorization-refresh\");\r\n    if (!refreshToken) throw new Error(\"refreshToken 없음\");\r\n\r\n    const response = await axios.post(\r\n    \"/auth/refresh\",\r\n    {},\r\n    {\r\n        baseURL: \"http://localhost:8090\",\r\n        headers: {\r\n        \"Authorization-refresh\": refreshToken,\r\n        },\r\n        withCredentials: true,\r\n    }\r\n    );\r\n\r\n    return response.data.accessToken;\r\n} catch (error) {\r\n    console.error(\"❌ refreshToken 갱신 실패:\", error);\r\n    throw error;\r\n}\r\n};\r\n\r\n/**\r\n* ✅ Axios 공통 인스턴스\r\n*/\r\nconst instance = axios.create({\r\nbaseURL: \"http://localhost:8090\",\r\nwithCredentials: true, // 쿠키 및 인증정보 포함\r\n});\r\n\r\n/**\r\n* ✅ 요청 인터셉터\r\n* 모든 요청에 AccessToken 자동 포함\r\n*/\r\ninstance.interceptors.request.use(\r\n(config) => {\r\n    const token = localStorage.getItem(\"Authorization\");\r\n    if (token) {\r\n    config.headers[\"Authorization\"] = token; // ex) \"Bearer eyJ...\"\r\n    }\r\n    return config;\r\n},\r\n(error) => Promise.reject(error)\r\n);\r\n\r\n/**\r\n* ✅ 응답 인터셉터\r\n* 401(Unauthorized) 발생 시 AccessToken 재발급 처리\r\n*/\r\ninstance.interceptors.response.use(\r\n(response) => response,\r\nasync (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    /**\r\n    * 1️⃣ 로그인/회원가입/아이디찾기 등 비인증 요청은 예외처리\r\n    * -> 세션 만료 메시지 표시 X\r\n    */\r\n    const unauthenticatedEndpoints = [\"/login\", \"/signup\", \"/find-account\"];\r\n    if (unauthenticatedEndpoints.some((url) => originalRequest.url.includes(url))) {\r\n    return Promise.reject(error); // 그대로 Login.jsx 등으로 전달\r\n    }\r\n\r\n    /**\r\n    * 2️⃣ AccessToken 만료로 인한 401 에러 처리\r\n    */\r\n    if (\r\n    error.response &&\r\n    error.response.status === 401 &&\r\n    !originalRequest._retry\r\n    ) {\r\n    originalRequest._retry = true;\r\n\r\n    try {\r\n        // AccessToken 재발급\r\n        const newAccessToken = await refreshAccessToken();\r\n        const bearerToken = `Bearer ${newAccessToken}`;\r\n\r\n        // 새 토큰 저장\r\n        localStorage.setItem(\"Authorization\", bearerToken);\r\n\r\n        // 요청 헤더 갱신\r\n        originalRequest.headers[\"Authorization\"] = bearerToken;\r\n        if (\r\n        originalRequest.data instanceof FormData &&\r\n        !originalRequest.headers[\"Content-Type\"]\r\n        ) {\r\n        originalRequest.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n        }\r\n\r\n        // ✅ 재요청 실행\r\n        return instance(originalRequest);\r\n    } catch (refreshError) {\r\n        console.error(\"❌ refreshToken 재발급 실패:\", refreshError);\r\n\r\n        /**\r\n        * 3️⃣ refreshToken도 만료되었거나 재발급 실패 → 로그아웃 처리\r\n        */\r\n        localStorage.removeItem(\"Authorization\");\r\n        localStorage.removeItem(\"Authorization-refresh\");\r\n        localStorage.removeItem(\"userId\");\r\n        localStorage.removeItem(\"userName\");\r\n        localStorage.removeItem(\"roleCd\");\r\n        localStorage.removeItem(\"isLogin\");\r\n\r\n        // [수정] alert()는 이 환경에서 작동하지 않습니다. console.error로 대체합니다.\r\n        // alert(\"세션이 만료되었습니다. 다시 로그인해주세요.\");\r\n        console.error(\"세션이 만료되었습니다. 다시 로그인해주세요.\");\r\n\r\n\r\n        // React SPA에서는 전체 새로고침 없이 상태만 초기화\r\n        return Promise.reject(refreshError);\r\n    }\r\n    }\r\n\r\n    /**\r\n    * 4️⃣ 기타 오류는 그대로 상위로 전파\r\n    */\r\n    return Promise.reject(error);\r\n}\r\n);\r\n\r\n// --- [수정 완료] ---\r\n\r\n\r\nfunction XRayUpload({ currentUser }) {\r\n    const [patientId, setPatientId] = useState('');\r\n    const [doctorId, setDoctorId] = useState('');\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [previewUrl, setPreviewUrl] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [uploadStatus, setUploadStatus] = useState(null); // 'success', 'error', or null\r\n\r\n    useEffect(() => {\r\n        if (!imageFile) {\r\n            setPreviewUrl(null);\r\n            return;\r\n        }\r\n        const objectUrl = URL.createObjectURL(imageFile);\r\n        setPreviewUrl(objectUrl);\r\n\r\n        // Clean up the object URL on unmount\r\n        return () => URL.revokeObjectURL(objectUrl);\r\n    }, [imageFile]);\r\n\r\n    const handleFileChange = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            setImageFile(e.target.files[0]);\r\n            setUploadStatus(null);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!patientId || !doctorId || !imageFile) {\r\n            alert('환자 ID, 담당의사 ID, 그리고 이미지 파일을 모두 입력해주세요.');\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        setUploadStatus(null);\r\n\r\n        // FormData 객체 생성\r\n        const formData = new FormData();\r\n        formData.append('patientId', patientId);\r\n        formData.append('doctorId', doctorId);\r\n        formData.append('xrayImage', imageFile); // 'xrayImage'는 XrayImageDTO의 MultipartFile 필드명과 일치해야 함\r\n        formData.append('uploaderId', currentUser.memberId); // 'uploaderId'는 XrayImageDTO의 uploaderId 필드명과 일치해야 함\r\n\r\n        try {\r\n            // --- 백엔드 API 호출 ---\r\n            // 'Content-Type': 'multipart/form-data' 헤더를 명시적으로 설정하지 않습니다.\r\n            // 브라우저가 FormData 객체를 전송할 때 자동으로 올바른 Content-Type과 boundary를 설정합니다.\r\n            // 이 부분을 수정하는 것이 핵심입니다.\r\n            // [수정] 'api'에서 'instance'로 변경합니다.\r\n            const response = await instance.post('/xray/upload', formData);\r\n\r\n            // 백엔드가 \"1\"을 body로 응답하므로, response.data === \"1\" 로 확인하는 것이 더 정확할 수 있습니다.\r\n            if (response.status !== 200 || response.data !== \"1\") {\r\n                throw new Error('업로드 실패');\r\n            }\r\n            \r\n            console.log('Upload success:', response.data);\r\n\r\n            setUploadStatus('success');\r\n            // 성공 후 폼 초기화\r\n            setPatientId('');\r\n            setDoctorId('');\r\n            setImageFile(null);\r\n\r\n        } catch (error) {\r\n            console.error('Upload error:', error);\r\n            setUploadStatus('error');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full max-w-2xl mx-auto\">\r\n            <header className=\"text-center mb-8\">\r\n                <h1 className=\"text-4xl sm:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-500\">\r\n                    X-Ray 이미지 업로드\r\n                </h1>\r\n                <p className=\"text-gray-400 mt-2\">\r\n                    환자의 X-Ray 이미지와 정보를 등록합니다.\r\n                </p>\r\n            </header>\r\n            <main className=\"w-full glassmorphism rounded-2xl shadow-lg p-6 sm:p-8\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"space-y-6\">\r\n                        {/* 환자 및 의사 정보 입력 */}\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                            <div>\r\n                                <label htmlFor=\"patientId\" className=\"block text-sm font-medium text-gray-300 mb-2\">환자 ID</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"patientId\"\r\n                                    value={patientId}\r\n                                    onChange={(e) => setPatientId(e.target.value)}\r\n                                    className=\"w-full bg-gray-800/60 border border-gray-700 rounded-lg px-3 py-2 text-white focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500 transition\"\r\n                                    placeholder=\"예: P12345\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"doctorId\" className=\"block text-sm font-medium text-gray-300 mb-2\">담당 의사 ID</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"doctorId\"\r\n                                    value={doctorId}\r\n                                    onChange={(e) => setDoctorId(e.target.value)}\r\n                                    className=\"w-full bg-gray-800/60 border border-gray-700 rounded-lg px-3 py-2 text-white focus:ring-2 focus:ring-cyan-500 focus:border-cyan-500 transition\"\r\n                                    placeholder=\"예: D67890\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* 이미지 업로드 */}\r\n                        <div>\r\n                             <label className=\"block text-sm font-medium text-gray-300 mb-2\">X-Ray 이미지</label>\r\n                            <div className=\"w-full h-64 border-2 border-dashed border-gray-600 rounded-lg flex items-center justify-center relative overflow-hidden bg-gray-900/50\">\r\n                                {previewUrl ? (\r\n                                    <img src={previewUrl} alt=\"X-ray preview\" className=\"h-full w-full object-contain\" />\r\n                                ) : (\r\n                                    <div className=\"text-center text-gray-400\">\r\n                                        <i className=\"fas fa-upload text-4xl mb-2\"></i>\r\n                                        <p>파일을 드래그하거나 클릭하여 업로드</p>\r\n                                    </div>\r\n                                )}\r\n                                <input type=\"file\" className=\"absolute top-0 left-0 w-full h-full opacity-0 cursor-pointer\" accept=\"image/png, image/jpeg, image/dicom\" onChange={handleFileChange} required />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* 제출 버튼 */}\r\n                    <div className=\"mt-8\">\r\n                        <button type=\"submit\" disabled={isLoading} className=\"w-full bg-cyan-600 text-white font-bold py-3 px-4 rounded-lg hover:bg-cyan-700 disabled:bg-gray-500 disabled:cursor-not-allowed transition-colors duration-300 flex items-center justify-center\">\r\n                            {isLoading ? (\r\n                                <>\r\n                                    <i className=\"fas fa-spinner fa-spin mr-2\"></i> 업로드 중...\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <i className=\"fas fa-cloud-upload-alt mr-2\"></i> 정보 등록 및 업로드\r\n                                </>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                 {/* 업로드 상태 메시지 */}\r\n                {uploadStatus && (\r\n                    <div className={`mt-4 text-center p-3 rounded-lg ${uploadStatus === 'success' ? 'bg-green-500/20 text-green-300' : 'bg-red-500/20 text-red-300'}`}>\r\n                        {uploadStatus === 'success' ? '성공적으로 업로드되었습니다.' : '업로드 중 오류가 발생했습니다.'}\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default XRayUpload;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}