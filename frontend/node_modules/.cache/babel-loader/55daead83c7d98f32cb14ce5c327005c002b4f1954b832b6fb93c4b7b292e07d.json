{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport instance from \"services/api/client\";\nconst Logout = ({\n  onNavigate,\n  onLogout\n}) => {\n  _s();\n  const hasRun = useRef(false);\n  useEffect(() => {\n    if (hasRun.current) return;\n    hasRun.current = true;\n    const handleLogout = async () => {\n      console.log(\"logout start\");\n      const userId = localStorage.getItem(\"userId\");\n      console.log(\"logout userId =>\", userId);\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"Authorization\"),\n          \"Authorization-refresh\": localStorage.getItem(\"Authorization-refresh\")\n        }\n      };\n      try {\n        await instance.delete(`/member/logout`, config);\n      } catch (error) {\n        console.warn(\"logout 실패 =>\", error.message);\n      }\n      localStorage.clear();\n      onLogout();\n      onNavigate(\"main\");\n      console.log(\"logout 완료, 메인 페이지 이동\");\n    };\n    handleLogout();\n  }, [onNavigate, onLogout]);\n  return null;\n};\n_s(Logout, \"/+YHx4VX9OVYfM2tjd2Yl6u+s9U=\");\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["useEffect","useRef","instance","Logout","onNavigate","onLogout","_s","hasRun","current","handleLogout","console","log","userId","localStorage","getItem","config","headers","Authorization","delete","error","warn","message","clear","_c","$RefreshReg$"],"sources":["D:/Medical AI/2nd_project_STrio/frontend/src/features/auth/Logout.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport instance from \"services/api/client\";\r\n\r\nconst Logout = ({ onNavigate, onLogout }) => {\r\n  const hasRun = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (hasRun.current) return;\r\n    hasRun.current = true;\r\n\r\n    const handleLogout = async () => {\r\n      console.log(\"logout start\");\r\n      const userId = localStorage.getItem(\"userId\");\r\n      console.log(\"logout userId =>\", userId);\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"Authorization\"),\r\n          \"Authorization-refresh\": localStorage.getItem(\"Authorization-refresh\"),\r\n        },\r\n      };\r\n\r\n      try {\r\n        await instance.delete(`/member/logout`, config);\r\n      } catch (error) {\r\n        console.warn(\"logout 실패 =>\", error.message);\r\n      }\r\n\r\n      localStorage.clear();\r\n      onLogout();\r\n      onNavigate(\"main\");\r\n\r\n      console.log(\"logout 완료, 메인 페이지 이동\");\r\n    };\r\n\r\n    handleLogout();\r\n  }, [onNavigate, onLogout]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Logout;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,QAAQ,MAAM,qBAAqB;AAE1C,MAAMC,MAAM,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,MAAM,GAAGN,MAAM,CAAC,KAAK,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,IAAIO,MAAM,CAACC,OAAO,EAAE;IACpBD,MAAM,CAACC,OAAO,GAAG,IAAI;IAErB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7CJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,MAAM,CAAC;MAEvC,MAAMG,MAAM,GAAG;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAEJ,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;UACpD,uBAAuB,EAAED,YAAY,CAACC,OAAO,CAAC,uBAAuB;QACvE;MACF,CAAC;MAED,IAAI;QACF,MAAMZ,QAAQ,CAACgB,MAAM,CAAC,gBAAgB,EAAEH,MAAM,CAAC;MACjD,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdT,OAAO,CAACU,IAAI,CAAC,cAAc,EAAED,KAAK,CAACE,OAAO,CAAC;MAC7C;MAEAR,YAAY,CAACS,KAAK,CAAC,CAAC;MACpBjB,QAAQ,CAAC,CAAC;MACVD,UAAU,CAAC,MAAM,CAAC;MAElBM,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC,CAAC;IAEDF,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC;EAE1B,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CArCIH,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAuCZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}