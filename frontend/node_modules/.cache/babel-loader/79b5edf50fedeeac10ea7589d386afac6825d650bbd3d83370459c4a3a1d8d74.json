{"ast":null,"code":"var _jsxFileName = \"D:\\\\Medical AI\\\\2nd_project_STrio\\\\frontend\\\\src\\\\pages\\\\Notice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// API URL을 상수로 정의하면 관리가 편합니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8090\";\nfunction Notice({\n  currentUser\n}) {\n  _s();\n  const [selectedNotice, setSelectedNotice] = useState(null);\n  const [notices, setNotices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedNotice, setEditedNotice] = useState(null);\n\n  // 목록을 불러오는 함수\n  const fetchNotices = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_URL}/notice/list/1`);\n      // data.noticeList가 null일 경우를 대비해 빈 배열로 처리\n      setNotices(response.data.noticeList || []);\n    } catch (error) {\n      console.error(\"공지사항을 불러오는 중 오류가 발생했습니다:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 처음 로드 시 1회 실행\n  useEffect(() => {\n    fetchNotices();\n  }, []);\n\n  // currentUser가 존재하고 role이 'A' (Admin)일 때 true\n  const isAdmin = currentUser && currentUser.role === 'A';\n\n  // '글쓰기' 버튼 클릭\n  const handleCreate = () => {\n    setEditedNotice({\n      title: '',\n      cont: ''\n    });\n    setIsEditing(true);\n    setSelectedNotice(null);\n  };\n\n  // '수정' 버튼 클릭\n  const handleEdit = notice => {\n    setEditedNotice({\n      ...notice\n    });\n    setIsEditing(true);\n    setSelectedNotice(null);\n  };\n\n  // -----------------------------------------------------\n  // [수정됨] handleDelete 함수\n  // -----------------------------------------------------\n  const handleDelete = async noticeId => {\n    if (window.confirm(\"정말로 이 공지사항을 삭제하시겠습니까?\")) {\n      try {\n        // 1. [수정] API 주소를 백엔드 컨트롤러와 일치시킴\n        await axios.delete(`${API_URL}/notice/delete/${noticeId}`);\n        alert(\"공지사항이 삭제되었습니다.\");\n        setSelectedNotice(null);\n\n        // 2. [수정] state를 직접 조작하는 대신, 목록을 새로고침\n        fetchNotices();\n      } catch (error) {\n        console.error(\"공지사항 삭제 중 오류가 발생했습니다:\", error);\n        alert(\"공지사항 삭제에 실패했습니다.\");\n      }\n    }\n  };\n\n  // '저장' (Submit) 버튼 클릭\n  const handleSave = async e => {\n    e.preventDefault();\n    const isNew = !editedNotice.noticeId;\n    const formData = new FormData();\n    formData.append('title', editedNotice.title);\n    formData.append('cont', editedNotice.cont);\n\n    // currentUser의 ID 필드명(userId, id 등)을 정확히 확인하세요.\n    formData.append('userId', currentUser.user);\n    try {\n      if (isNew) {\n        // 새 글 작성\n        await axios.post(`${API_URL}/notice/write`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('공지사항이 성공적으로 작성되었습니다.');\n      } else {\n        // 기존 글 수정\n        formData.append('noticeId', editedNotice.noticeId);\n        await axios.put(`${API_URL}/notice/update`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('공지사항이 성공적으로 수정되었습니다.');\n      }\n\n      // 저장 완료 후 모달 닫고 목록 새로고침\n      setIsEditing(false);\n      setEditedNotice(null);\n      setSelectedNotice(null);\n      fetchNotices();\n    } catch (error) {\n      console.error(\"저장 중 오류 발생:\", error);\n      alert(\"저장에 실패했습니다.\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this);\n  }\n\n  // -----------------------------------------------------\n  // [수정됨] <tbody> key 값 버그 수정\n  // -----------------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), isAdmin && !isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        className: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), isEditing ?\n    /*#__PURE__*/\n    // (수정/작성 폼)\n    _jsxDEV(\"form\", {\n      onSubmit: handleSave,\n      className: \"bg-gray-800/50 p-6 sm:p-8 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedNotice.title,\n        onChange: e => setEditedNotice({\n          ...editedNotice,\n          title: e.target.value\n        }),\n        placeholder: \"\\uC81C\\uBAA9\",\n        className: \"w-full bg-gray-700 text-white p-2 rounded mb-4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedNotice.cont,\n        onChange: e => setEditedNotice({\n          ...editedNotice,\n          cont: e.target.value\n        }),\n        placeholder: \"\\uB0B4\\uC6A9\",\n        className: \"w-full bg-gray-700 text-white p-2 rounded mb-4 h-48\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setIsEditing(false),\n          className: \"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"\\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this) : selectedNotice ?\n    /*#__PURE__*/\n    // (상세 보기)\n    _jsxDEV(\"div\", {\n      className: \"bg-gray-800/50 p-6 sm:p-8 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-2\",\n        children: selectedNotice.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 text-sm mb-6 border-b border-gray-700 pb-4\",\n        children: [\"\\uC791\\uC131\\uC77C: \", new Date(selectedNotice.createdAt).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-300 whitespace-pre-wrap\",\n        children: selectedNotice.cont\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedNotice(null),\n          className: \"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"\\uBAA9\\uB85D\\uC73C\\uB85C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(selectedNotice),\n            className: \"bg-yellow-600 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(selectedNotice.noticeId),\n            className: \"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // (목록 테이블)\n    _jsxDEV(\"div\", {\n      className: \"bg-gray-800/50 rounded-lg overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full text-sm text-left text-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"text-xs text-gray-400 uppercase bg-gray-700/50\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3 w-1/6\",\n              children: \"\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3 w-3/6\",\n              children: \"\\uC81C\\uBAA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3 w-2/6\",\n              children: \"\\uC791\\uC131\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: notices.map(notice => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b border-gray-700 hover:bg-gray-700/50\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: notice.noticeId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectedNotice(notice),\n                className: \"font-medium hover:underline text-left\",\n                children: notice.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: new Date(notice.createdAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this)]\n          }, notice.noticeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n_s(Notice, \"iuSNXtJ7O2bYJBuiReFeZ+D/aLY=\");\n_c = Notice;\nexport default Notice;\nvar _c;\n$RefreshReg$(_c, \"Notice\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","Notice","currentUser","_s","selectedNotice","setSelectedNotice","notices","setNotices","loading","setLoading","isEditing","setIsEditing","editedNotice","setEditedNotice","fetchNotices","response","get","data","noticeList","error","console","isAdmin","role","handleCreate","title","cont","handleEdit","notice","handleDelete","noticeId","window","confirm","delete","alert","handleSave","e","preventDefault","isNew","formData","FormData","append","user","post","headers","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","required","Date","createdAt","toLocaleDateString","scope","map","_c","$RefreshReg$"],"sources":["D:/Medical AI/2nd_project_STrio/frontend/src/pages/Notice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// API URL을 상수로 정의하면 관리가 편합니다.\r\nconst API_URL = \"http://localhost:8090\";\r\n\r\nfunction Notice({ currentUser }) {\r\n    const [selectedNotice, setSelectedNotice] = useState(null);\r\n    const [notices, setNotices] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editedNotice, setEditedNotice] = useState(null);\r\n\r\n    // 목록을 불러오는 함수\r\n    const fetchNotices = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get(`${API_URL}/notice/list/1`);\r\n            // data.noticeList가 null일 경우를 대비해 빈 배열로 처리\r\n            setNotices(response.data.noticeList || []); \r\n        } catch (error) {\r\n            console.error(\"공지사항을 불러오는 중 오류가 발생했습니다:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // 처음 로드 시 1회 실행\r\n    useEffect(() => {\r\n        fetchNotices();\r\n    }, []);\r\n\r\n    // currentUser가 존재하고 role이 'A' (Admin)일 때 true\r\n    const isAdmin = currentUser && currentUser.role === 'A';\r\n\r\n    // '글쓰기' 버튼 클릭\r\n    const handleCreate = () => {\r\n        setEditedNotice({ title: '', cont: '' });\r\n        setIsEditing(true);\r\n        setSelectedNotice(null);\r\n    };\r\n\r\n    // '수정' 버튼 클릭\r\n    const handleEdit = (notice) => {\r\n        setEditedNotice({ ...notice });\r\n        setIsEditing(true);\r\n        setSelectedNotice(null);\r\n    };\r\n\r\n    // -----------------------------------------------------\r\n    // [수정됨] handleDelete 함수\r\n    // -----------------------------------------------------\r\n    const handleDelete = async (noticeId) => {\r\n        if (window.confirm(\"정말로 이 공지사항을 삭제하시겠습니까?\")) {\r\n            try {\r\n                // 1. [수정] API 주소를 백엔드 컨트롤러와 일치시킴\r\n                await axios.delete(`${API_URL}/notice/delete/${noticeId}`);\r\n                \r\n                alert(\"공지사항이 삭제되었습니다.\");\r\n                setSelectedNotice(null);\r\n                \r\n                // 2. [수정] state를 직접 조작하는 대신, 목록을 새로고침\r\n                fetchNotices(); \r\n            } catch (error) {\r\n                console.error(\"공지사항 삭제 중 오류가 발생했습니다:\", error);\r\n                alert(\"공지사항 삭제에 실패했습니다.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // '저장' (Submit) 버튼 클릭\r\n    const handleSave = async (e) => {\r\n        e.preventDefault();\r\n        const isNew = !editedNotice.noticeId;\r\n\r\n        const formData = new FormData();\r\n        formData.append('title', editedNotice.title);\r\n        formData.append('cont', editedNotice.cont);\r\n        \r\n        // currentUser의 ID 필드명(userId, id 등)을 정확히 확인하세요.\r\n        formData.append('userId', currentUser.user); \r\n\r\n        try {\r\n            if (isNew) {\r\n                // 새 글 작성\r\n                await axios.post(`${API_URL}/notice/write`, formData, {\r\n                    headers: { 'Content-Type': 'multipart/form-data' }\r\n                });\r\n                alert('공지사항이 성공적으로 작성되었습니다.');\r\n            } else {\r\n                // 기존 글 수정\r\n                formData.append('noticeId', editedNotice.noticeId);\r\n                await axios.put(`${API_URL}/notice/update`, formData, {\r\n                    headers: { 'Content-Type': 'multipart/form-data' }\r\n                });\r\n                alert('공지사항이 성공적으로 수정되었습니다.');\r\n            }\r\n\r\n            // 저장 완료 후 모달 닫고 목록 새로고침\r\n            setIsEditing(false);\r\n            setEditedNotice(null);\r\n            setSelectedNotice(null);\r\n            fetchNotices(); \r\n\r\n        } catch (error) {\r\n            console.error(\"저장 중 오류 발생:\", error);\r\n            alert(\"저장에 실패했습니다.\");\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className=\"text-center\">로딩 중...</div>;\r\n    }\r\n\r\n    // -----------------------------------------------------\r\n    // [수정됨] <tbody> key 값 버그 수정\r\n    // -----------------------------------------------------\r\n    return (\r\n        <div className=\"w-full max-w-4xl mx-auto\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n                <h1 className=\"text-3xl font-bold\">공지사항</h1>\r\n                {isAdmin && !isEditing && (\r\n                    <button onClick={handleCreate}\r\n                       className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\r\n                        글쓰기\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {isEditing ? (\r\n                // (수정/작성 폼)\r\n                <form onSubmit={handleSave}\r\n                   className=\"bg-gray-800/50 p-6 sm:p-8 rounded-lg\">\r\n                    <input \r\n                        type=\"text\" \r\n                        value={editedNotice.title}\r\n                        onChange={(e) => setEditedNotice({ ...editedNotice, title: e.target.value })}\r\n                        placeholder=\"제목\" \r\n                        className=\"w-full bg-gray-700 text-white p-2 rounded mb-4\" \r\n                        required \r\n                    />\r\n                    <textarea \r\n                        value={editedNotice.cont}\r\n                        onChange={(e) => setEditedNotice({ ...editedNotice, cont: e.target.value })}\r\n                        placeholder=\"내용\" \r\n                        className=\"w-full bg-gray-700 text-white p-2 rounded mb-4 h-48\" \r\n                        required \r\n                    />\r\n                    <div className=\"flex justify-end gap-4\">\r\n                        <button type=\"button\" onClick={() => setIsEditing(false)}\r\n                           className=\"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">\r\n                            취소\r\n                        </button>\r\n                        <button type=\"submit\"\r\n                           className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">\r\n                            저장\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            ) : selectedNotice ? (\r\n                // (상세 보기)\r\n                <div className=\"bg-gray-800/50 p-6 sm:p-8 rounded-lg\">\r\n                    <h2 className=\"text-2xl font-bold mb-2\">{selectedNotice.title}</h2>\r\n                    <p className=\"text-gray-400 text-sm mb-6 border-b border-gray-700 pb-4\">\r\n                        작성일: {new Date(selectedNotice.createdAt).toLocaleDateString()}\r\n                    </p>\r\n                    <div className=\"text-gray-300 whitespace-pre-wrap\">\r\n                        {selectedNotice.cont}\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center mt-8\">\r\n                        <button onClick={() => setSelectedNotice(null)}\r\n                           className=\"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">\r\n                            목록으로\r\n                        </button>\r\n                        {isAdmin && (\r\n                            <div className=\"flex gap-4\">\r\n                                <button onClick={() => handleEdit(selectedNotice)}\r\n                                   className=\"bg-yellow-600 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded\">\r\n                                    수정\r\n                                </button>\r\n                                <button onClick={() => handleDelete(selectedNotice.noticeId)}\r\n                                   className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">\r\n                                    삭제\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                // (목록 테이블)\r\n                <div className=\"bg-gray-800/50 rounded-lg overflow-hidden\">\r\n                    <table className=\"w-full text-sm text-left text-gray-300\">\r\n                        <thead className=\"text-xs text-gray-400 uppercase bg-gray-700/50\">\r\n                            <tr>\r\n                                <th scope=\"col\" className=\"px-6 py-3 w-1/6\">번호</th>\r\n                                <th scope=\"col\" className=\"px-6 py-3 w-3/6\">제목</th>\r\n                                <th scope=\"col\" className=\"px-6 py-3 w-2/6\">작성일</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* [수정] key={notice.notice} -> key={notice.noticeId} */}\r\n                            {notices.map(notice => (\r\n                                <tr key={notice.noticeId} \r\n                                   className=\"border-b border-gray-700 hover:bg-gray-700/50\">\r\n                                    <td className=\"px-6 py-4\">{notice.noticeId}</td>\r\n                                    <td className=\"px-6 py-4\">\r\n                                        <button onClick={() => setSelectedNotice(notice)}\r\n                                           className=\"font-medium hover:underline text-left\">\r\n                                            {notice.title}\r\n                                        </button>\r\n                                    </td>\r\n                                    <td className=\"px-6 py-4\">{new Date(notice.createdAt).toLocaleDateString()}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notice;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}