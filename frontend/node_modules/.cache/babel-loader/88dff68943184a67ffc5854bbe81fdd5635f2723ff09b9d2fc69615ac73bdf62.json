{"ast":null,"code":"var _jsxFileName = \"D:\\\\Medical AI\\\\2nd_project_STrio\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// --- 각 페이지 컴포넌트들을 import 합니다. ---\n// (실제 프로젝트에서는 이 파일들이 src/pages/ 폴더 안에 있어야 합니다.)\nimport Main from './pages/Main';\nimport Navbar from './components/Navbar'; // Navbar는 components 폴더로 분리하는 것이 좋습니다.\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport FindAccount from './pages/FindAccount';\nimport Notice from './pages/Notice';\nimport MemberManagement from './pages/MemberManagement';\nimport Diagnosis from './components/diagnosis/Diagnosis';\nimport NoticeManagement from './pages/NoticeManagement';\nimport Profile from './pages/Profile';\nimport DiagnosisList from './pages/DiagnosisList';\nimport UploadHistory from './pages/UploadHistory';\n\n// --- 최상위 App 컴포넌트 ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('main');\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // 로그인 핸들러: 역할(role)에 따라 다른 페이지로 이동\n  const handleLogin = userData => {\n    setCurrentUser(userData);\n    if (userData.role === 'ADMIN') {\n      setCurrentPage('members'); // 관리자는 회원 관리 페이지로\n    } else {\n      setCurrentPage('main'); // 그 외 사용자는 메인 페이지로\n    }\n  };\n\n  // 로그아웃 핸들러\n  const handleLogout = () => {\n    setCurrentUser(null);\n    setCurrentPage('main');\n  };\n\n  // 페이지 이동을 위한 핸들러 (Navbar, Login 등 자식 컴포넌트에서 사용)\n  const handleNavigate = page => {\n    setCurrentPage(page);\n  };\n\n  // 현재 상태에 따라 적절한 페이지를 렌더링하는 함수\n  const renderPage = () => {\n    // --- 1. 비로그인 상태에서 보여줄 페이지 ---\n    if (!currentUser) {\n      switch (currentPage) {\n        case 'login':\n          return /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin,\n            onNavigate: handleNavigate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 28\n          }, this);\n        case 'signup':\n          return /*#__PURE__*/_jsxDEV(SignUp, {\n            onNavigate: handleNavigate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 28\n          }, this);\n        case 'find-account':\n          return /*#__PURE__*/_jsxDEV(FindAccount, {\n            onNavigate: handleNavigate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 28\n          }, this);\n        case 'notice':\n          return /*#__PURE__*/_jsxDEV(Notice, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 28\n          }, this);\n        case 'main':\n        default:\n          return /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center text-xl\",\n            children: \"LungMate\\uC5D0 \\uC624\\uC2E0 \\uAC83\\uC744 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4. \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 28\n          }, this);\n      }\n    }\n\n    // --- 2. 로그인 상태에서 보여줄 페이지 ---\n    switch (currentPage) {\n      case 'notice':\n        return /*#__PURE__*/_jsxDEV(Notice, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }, this);\n      case 'notice-management':\n        return currentUser.role === 'ADMIN' ? /*#__PURE__*/_jsxDEV(NoticeManagement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 55\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"\\uC811\\uADFC \\uAD8C\\uD55C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 78\n        }, this);\n      case 'profile':\n        return /*#__PURE__*/_jsxDEV(Profile, {\n          currentUser: currentUser,\n          setCurrentUser: setCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this);\n      case 'members':\n        return currentUser.role === 'ADMIN' ? /*#__PURE__*/_jsxDEV(MemberManagement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 55\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"\\uC811\\uADFC \\uAD8C\\uD55C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 78\n        }, this);\n      case 'diagnosis':\n        // 진단 페이지는 예시로 모든 로그인 사용자가 접근 가능하도록 설정\n        return /*#__PURE__*/_jsxDEV(Diagnosis, {\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this);\n\n      // --- 아래는 Navbar 메뉴에 따라 추가될 페이지들의 case 입니다. ---\n      case 'diagnosis-list':\n        return currentUser.role === 'DOCTOR' ? /*#__PURE__*/_jsxDEV(DiagnosisList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 56\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"\\uC811\\uADFC \\uAD8C\\uD55C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 76\n        }, this);\n      case 'xray-upload':\n        return currentUser.role === 'XRAY_OPERATOR' ? /*#__PURE__*/_jsxDEV(Diagnosis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 64\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"\\uC811\\uADFC \\uAD8C\\uD55C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 80\n        }, this);\n      case 'upload-history':\n        return currentUser.role === 'XRAY_OPERATOR' ? /*#__PURE__*/_jsxDEV(UploadHistory, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 64\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"\\uC811\\uADFC \\uAD8C\\uD55C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 84\n        }, this);\n      case 'main':\n      default:\n        // 관리자는 메인 페이지 요청 시에도 회원 관리 페이지를 보여줌\n        if (currentUser.role === 'ADMIN') {\n          return /*#__PURE__*/_jsxDEV(MemberManagement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 28\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center text-xl\",\n          children: [\"'\", currentUser.memberName, \"'\\uB2D8, \\uD658\\uC601\\uD569\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 text-white min-h-screen font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      currentUser: currentUser,\n      onLogout: handleLogout\n      // Navbar에서는 페이지 이동만 필요하므로 handleNavigate를 전달하는 것이 더 명확합니다.\n      ,\n      onNavigate: handleNavigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto p-4 sm:p-6 md:p-8 pt-24\",\n      children: [\" \", renderPage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Pq7miZrugaNy2F2+OO1RPUnUr+A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Main","Navbar","Login","SignUp","FindAccount","Notice","MemberManagement","Diagnosis","NoticeManagement","Profile","DiagnosisList","UploadHistory","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","currentUser","setCurrentUser","handleLogin","userData","role","handleLogout","handleNavigate","page","renderPage","onLogin","onNavigate","fileName","_jsxFileName","lineNumber","columnNumber","className","children","memberName","onLogout","_c","$RefreshReg$"],"sources":["D:/Medical AI/2nd_project_STrio/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// --- 각 페이지 컴포넌트들을 import 합니다. ---\r\n// (실제 프로젝트에서는 이 파일들이 src/pages/ 폴더 안에 있어야 합니다.)\r\nimport Main from './pages/Main';\r\nimport Navbar from './components/Navbar'; // Navbar는 components 폴더로 분리하는 것이 좋습니다.\r\nimport Login from './pages/Login';\r\nimport SignUp from './pages/SignUp';\r\nimport FindAccount from './pages/FindAccount';\r\nimport Notice from './pages/Notice';\r\nimport MemberManagement from './pages/MemberManagement';\r\nimport Diagnosis from './components/diagnosis/Diagnosis';\r\nimport NoticeManagement from './pages/NoticeManagement';\r\nimport Profile from './pages/Profile';\r\nimport DiagnosisList from './pages/DiagnosisList';\r\nimport UploadHistory from './pages/UploadHistory';\r\n\r\n// --- 최상위 App 컴포넌트 ---\r\nfunction App() {\r\n    const [currentPage, setCurrentPage] = useState('main');\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    // 로그인 핸들러: 역할(role)에 따라 다른 페이지로 이동\r\n    const handleLogin = (userData) => {\r\n        setCurrentUser(userData);\r\n        if (userData.role === 'ADMIN') {\r\n            setCurrentPage('members'); // 관리자는 회원 관리 페이지로\r\n        } else {\r\n            setCurrentPage('main'); // 그 외 사용자는 메인 페이지로\r\n        }\r\n    };\r\n\r\n    // 로그아웃 핸들러\r\n    const handleLogout = () => {\r\n        setCurrentUser(null);\r\n        setCurrentPage('main');\r\n    };\r\n\r\n    // 페이지 이동을 위한 핸들러 (Navbar, Login 등 자식 컴포넌트에서 사용)\r\n    const handleNavigate = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    // 현재 상태에 따라 적절한 페이지를 렌더링하는 함수\r\n    const renderPage = () => {\r\n        // --- 1. 비로그인 상태에서 보여줄 페이지 ---\r\n        if (!currentUser) {\r\n            switch (currentPage) {\r\n                case 'login':\r\n                    return <Login onLogin={handleLogin} onNavigate={handleNavigate} />;\r\n                case 'signup':\r\n                    return <SignUp onNavigate={handleNavigate} />;\r\n                case 'find-account':\r\n                    return <FindAccount onNavigate={handleNavigate} />;\r\n                case 'notice':\r\n                    return <Notice />;\r\n                case 'main':\r\n                default:\r\n                    return <h2 className=\"text-center text-xl\">LungMate에 오신 것을 환영합니다. 로그인이 필요합니다.</h2>;\r\n            }\r\n        }\r\n\r\n        // --- 2. 로그인 상태에서 보여줄 페이지 ---\r\n        switch (currentPage) {\r\n            case 'notice':\r\n                return <Notice />;\r\n            case 'notice-management':\r\n                return currentUser.role === 'ADMIN' ? <NoticeManagement /> : <h2 className=\"text-center\">접근 권한이 없습니다.</h2>;\r\n            case 'profile':\r\n                return <Profile currentUser={currentUser} setCurrentUser={setCurrentUser} />;\r\n            case 'members':\r\n                return currentUser.role === 'ADMIN' ? <MemberManagement /> : <h2 className=\"text-center\">접근 권한이 없습니다.</h2>;\r\n            case 'diagnosis': // 진단 페이지는 예시로 모든 로그인 사용자가 접근 가능하도록 설정\r\n                return <Diagnosis currentUser={currentUser} />;\r\n            \r\n            // --- 아래는 Navbar 메뉴에 따라 추가될 페이지들의 case 입니다. ---\r\n            case 'diagnosis-list':\r\n                return currentUser.role === 'DOCTOR' ? <DiagnosisList /> : <h2 className=\"text-center\">접근 권한이 없습니다.</h2>;\r\n            case 'xray-upload':\r\n                 return currentUser.role === 'XRAY_OPERATOR' ? <Diagnosis /> : <h2 className=\"text-center\">접근 권한이 없습니다.</h2>;\r\n            case 'upload-history':\r\n                 return currentUser.role === 'XRAY_OPERATOR' ? <UploadHistory /> : <h2 className=\"text-center\">접근 권한이 없습니다.</h2>;\r\n\r\n            case 'main':\r\n            default:\r\n                // 관리자는 메인 페이지 요청 시에도 회원 관리 페이지를 보여줌\r\n                if (currentUser.role === 'ADMIN') {\r\n                    return <MemberManagement />;\r\n                }\r\n                return <h2 className=\"text-center text-xl\">'{currentUser.memberName}'님, 환영합니다.</h2>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gray-900 text-white min-h-screen font-sans\">\r\n            <Navbar \r\n                currentUser={currentUser} \r\n                onLogout={handleLogout}\r\n                // Navbar에서는 페이지 이동만 필요하므로 handleNavigate를 전달하는 것이 더 명확합니다.\r\n                onNavigate={handleNavigate} \r\n            />\r\n            <main className=\"container mx-auto p-4 sm:p-6 md:p-8 pt-24\"> {/* Navbar가 fixed일 경우를 대비해 pt-24 추가 */}\r\n                {renderPage()}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAC1C,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,aAAa,MAAM,uBAAuB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMqB,WAAW,GAAIC,QAAQ,IAAK;IAC9BF,cAAc,CAACE,QAAQ,CAAC;IACxB,IAAIA,QAAQ,CAACC,IAAI,KAAK,OAAO,EAAE;MAC3BL,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;IAC/B,CAAC,MAAM;MACHA,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5B;EACJ,CAAC;;EAED;EACA,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACvBJ,cAAc,CAAC,IAAI,CAAC;IACpBF,cAAc,CAAC,MAAM,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMO,cAAc,GAAIC,IAAI,IAAK;IAC7BR,cAAc,CAACQ,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA,IAAI,CAACR,WAAW,EAAE;MACd,QAAQF,WAAW;QACf,KAAK,OAAO;UACR,oBAAOH,OAAA,CAACX,KAAK;YAACyB,OAAO,EAAEP,WAAY;YAACQ,UAAU,EAAEJ;UAAe;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACtE,KAAK,QAAQ;UACT,oBAAOnB,OAAA,CAACV,MAAM;YAACyB,UAAU,EAAEJ;UAAe;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACjD,KAAK,cAAc;UACf,oBAAOnB,OAAA,CAACT,WAAW;YAACwB,UAAU,EAAEJ;UAAe;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACtD,KAAK,QAAQ;UACT,oBAAOnB,OAAA,CAACR,MAAM;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACrB,KAAK,MAAM;QACX;UACI,oBAAOnB,OAAA;YAAIoB,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAAkC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;MAC1F;IACJ;;IAEA;IACA,QAAQhB,WAAW;MACf,KAAK,QAAQ;QACT,oBAAOH,OAAA,CAACR,MAAM;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACrB,KAAK,mBAAmB;QACpB,OAAOd,WAAW,CAACI,IAAI,KAAK,OAAO,gBAAGT,OAAA,CAACL,gBAAgB;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGnB,OAAA;UAAIoB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAC9G,KAAK,SAAS;QACV,oBAAOnB,OAAA,CAACJ,OAAO;UAACS,WAAW,EAAEA,WAAY;UAACC,cAAc,EAAEA;QAAe;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAChF,KAAK,SAAS;QACV,OAAOd,WAAW,CAACI,IAAI,KAAK,OAAO,gBAAGT,OAAA,CAACP,gBAAgB;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGnB,OAAA;UAAIoB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAC9G,KAAK,WAAW;QAAE;QACd,oBAAOnB,OAAA,CAACN,SAAS;UAACW,WAAW,EAAEA;QAAY;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;;MAElD;MACA,KAAK,gBAAgB;QACjB,OAAOd,WAAW,CAACI,IAAI,KAAK,QAAQ,gBAAGT,OAAA,CAACH,aAAa;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGnB,OAAA;UAAIoB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAC5G,KAAK,aAAa;QACb,OAAOd,WAAW,CAACI,IAAI,KAAK,eAAe,gBAAGT,OAAA,CAACN,SAAS;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGnB,OAAA;UAAIoB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAChH,KAAK,gBAAgB;QAChB,OAAOd,WAAW,CAACI,IAAI,KAAK,eAAe,gBAAGT,OAAA,CAACF,aAAa;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGnB,OAAA;UAAIoB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAEpH,KAAK,MAAM;MACX;QACI;QACA,IAAId,WAAW,CAACI,IAAI,KAAK,OAAO,EAAE;UAC9B,oBAAOT,OAAA,CAACP,gBAAgB;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAC/B;QACA,oBAAOnB,OAAA;UAAIoB,SAAS,EAAC,qBAAqB;UAAAC,QAAA,GAAC,GAAC,EAAChB,WAAW,CAACiB,UAAU,EAAC,0CAAU;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;IAC3F;EACJ,CAAC;EAED,oBACInB,OAAA;IAAKoB,SAAS,EAAC,+CAA+C;IAAAC,QAAA,gBAC1DrB,OAAA,CAACZ,MAAM;MACHiB,WAAW,EAAEA,WAAY;MACzBkB,QAAQ,EAAEb;MACV;MAAA;MACAK,UAAU,EAAEJ;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFnB,OAAA;MAAMoB,SAAS,EAAC,2CAA2C;MAAAC,QAAA,GAAC,GAAC,EACxDR,UAAU,CAAC,CAAC;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACjB,EAAA,CAxFQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA0FZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}