{"ast":null,"code":"import _objectSpread from\"D:/Medical AI/2nd_project_STrio/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import AuthLayout from'../AuthLayout';import instance from\"services/api/client\";import{useAuth}from\"../layout/AuthProvider\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(_ref){let{onLogin,onNavigate}=_ref;const[error,setError]=useState('');const[inputs,setInputs]=useState({userId:\"\",passwd:\"\"});const handleValueChange=e=>{setInputs(prev=>_objectSpread(_objectSpread({},prev),{},{[e.target.name]:e.target.value}));};const{userId,passwd}=inputs;const{login}=useAuth();const onSubmit=async e=>{e.preventDefault();try{await instance.post(\"/login\",inputs).then(response=>{console.log(response);//응답 헤더에서 토큰 추출\nconst accessToken=response.headers[\"authorization\"];//대소문자 주의\nconst refreshToken=response.headers[\"authorization-refresh\"];console.log(\"accessToken => \",accessToken);console.log(\"refreshToken => \",refreshToken);localStorage.setItem(\"Authorization\",accessToken);localStorage.setItem(\"Authorization-refresh\",refreshToken);localStorage.setItem(\"userId\",response.data.userId);localStorage.setItem(\"userName\",response.data.userName);localStorage.setItem(\"roleCd\",response.data.roleCd);localStorage.setItem(\"email\",response.data.email);localStorage.setItem(\"isLogin\",true);return response;}).then(response=>{login();// Context 상태변경\nsetInputs({userId:\"\",passwd:\"\"});//window.location.replace(\"/\");\nconst userData={memberId:response.data.userId,memberName:response.data.userName,role:response.data.roleCd,email:response.data.email};onLogin(userData);}).catch(error=>{if(error.response&&error.response.status===401){setError(\"아이디 또는 비밀번호가 일치하지 않습니다.\");}else{setError(\"로그인 중 오류가 발생했습니다.\");}});}catch(err){alert(\"로그인 실패2 : 아이디 또는 비밀번호 확인\");}};return(/*#__PURE__*/// 2. AuthLayout으로 전체를 감싸고, title prop을 전달합니다.\n_jsxs(AuthLayout,{title:\"\\uB85C\\uADF8\\uC778\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",className:\"block text-sm font-medium text-gray-300\",children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{id:\"username\",type:\"text\",name:\"userId\",className:\"w-full p-2 bg-gray-700 rounded mt-1 border border-gray-600 focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50\",value:userId,onChange:handleValueChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"block text-sm font-medium text-gray-300\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{id:\"password\",type:\"password\",name:\"passwd\",className:\"w-full p-2 bg-gray-700 rounded mt-1 border border-gray-600 focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50\",value:passwd,onChange:handleValueChange})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-400 text-center text-sm\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full bg-blue-600 py-2 rounded hover:bg-blue-700 font-bold transition-colors duration-200\",children:\"\\uB85C\\uADF8\\uC778\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>onNavigate('signup'),className:\"text-sm text-blue-400 hover:underline\",children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"}),/*#__PURE__*/_jsx(\"span\",{className:\"mx-2 text-gray-500\",children:\"|\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onNavigate('find-account'),className:\"text-sm text-blue-400 hover:underline\",children:\"\\uC544\\uC774\\uB514/\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"})]})]}));}export default Login;","map":{"version":3,"names":["React","useState","AuthLayout","instance","useAuth","jsx","_jsx","jsxs","_jsxs","Login","_ref","onLogin","onNavigate","error","setError","inputs","setInputs","userId","passwd","handleValueChange","e","prev","_objectSpread","target","name","value","login","onSubmit","preventDefault","post","then","response","console","log","accessToken","headers","refreshToken","localStorage","setItem","data","userName","roleCd","email","userData","memberId","memberName","role","catch","status","err","alert","title","children","className","htmlFor","id","type","onChange","onClick"],"sources":["D:/Medical AI/2nd_project_STrio/frontend/src/components/login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AuthLayout from '../AuthLayout';\r\nimport instance from \"services/api/client\";\r\nimport { useAuth } from \"../layout/AuthProvider\";\r\n\r\nfunction Login({ onLogin, onNavigate }) {\r\n    const [error, setError] = useState('');\r\n    \r\n    const [inputs, setInputs] = useState({\r\n        userId: \"\",\r\n        passwd: \"\",\r\n    });\r\n    \r\n    const handleValueChange = (e) => {\r\n        setInputs((prev) => ({\r\n        ...prev,\r\n        [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n  \r\n    const { userId, passwd } = inputs;\r\n    const { login } = useAuth();    \r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await instance\r\n                .post(`/login`, inputs)\r\n                .then((response) => {\r\n                console.log(response);\r\n\r\n                //응답 헤더에서 토큰 추출\r\n                const accessToken = response.headers[\"authorization\"]; //대소문자 주의\r\n                const refreshToken = response.headers[\"authorization-refresh\"];\r\n\r\n                console.log(\"accessToken => \", accessToken);\r\n                console.log(\"refreshToken => \", refreshToken);\r\n\r\n                localStorage.setItem(\"Authorization\", accessToken);\r\n                localStorage.setItem(\"Authorization-refresh\", refreshToken);\r\n\r\n                localStorage.setItem(\"userId\", response.data.userId);\r\n                localStorage.setItem(\"userName\", response.data.userName);\r\n                localStorage.setItem(\"roleCd\", response.data.roleCd);\r\n                localStorage.setItem(\"email\", response.data.email);\r\n                localStorage.setItem(\"isLogin\", true);\r\n                return response;\r\n                })\r\n                .then((response) => {\r\n                    login(); // Context 상태변경\r\n                    setInputs({ userId: \"\", passwd: \"\" });\r\n                    //window.location.replace(\"/\");\r\n                    const userData = {\r\n                        memberId: response.data.userId,\r\n                        memberName: response.data.userName,\r\n                        role: response.data.roleCd,\r\n                        email: response.data.email,\r\n                    };                    \r\n                    onLogin(userData);\r\n                })\r\n                .catch((error) => {\r\n                      if (error.response && error.response.status === 401) {\r\n                          setError(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\r\n                      } else {\r\n                          setError(\"로그인 중 오류가 발생했습니다.\");\r\n                      }\r\n                });\r\n        } catch (err) {\r\n            alert(\"로그인 실패2 : 아이디 또는 비밀번호 확인\");\r\n        }\r\n\r\n    };    \r\n\r\n    \r\n    return (\r\n        // 2. AuthLayout으로 전체를 감싸고, title prop을 전달합니다.\r\n        <AuthLayout title=\"로그인\">\r\n            {/* 이제부터는 로그인 페이지의 고유한 내용만 남깁니다. */}\r\n            <form onSubmit={onSubmit} className=\"space-y-6\">\r\n                <div>\r\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-300\">아이디</label>\r\n                    <input\r\n                        id=\"username\"\r\n                        type=\"text\"\r\n                        name=\"userId\"\r\n                        className=\"w-full p-2 bg-gray-700 rounded mt-1 border border-gray-600 focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50\"\r\n                        value={userId}\r\n                        onChange={handleValueChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\"  className=\"block text-sm font-medium text-gray-300\">비밀번호</label>\r\n                    <input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        name=\"passwd\"\r\n                        className=\"w-full p-2 bg-gray-700 rounded mt-1 border border-gray-600 focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50\"\r\n                        value={passwd}\r\n                        onChange={handleValueChange}\r\n                    />\r\n                </div>\r\n                {error && <p className=\"text-red-400 text-center text-sm\">{error}</p>}\r\n                \r\n                <button type=\"submit\" className=\"w-full bg-blue-600 py-2 rounded hover:bg-blue-700 font-bold transition-colors duration-200\">\r\n                    로그인\r\n                </button>\r\n            </form>\r\n\r\n            <div className=\"text-center mt-6\">\r\n                <button \r\n                    onClick={() => onNavigate('signup')} \r\n                    className=\"text-sm text-blue-400 hover:underline\"\r\n                >\r\n                    회원가입\r\n                </button>\r\n                <span className=\"mx-2 text-gray-500\">|</span>\r\n                <button \r\n                    onClick={() => onNavigate('find-account')} \r\n                    className=\"text-sm text-blue-400 hover:underline\"\r\n                >\r\n                    아이디/비밀번호 찾기\r\n                </button>\r\n            </div>\r\n        </AuthLayout>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}