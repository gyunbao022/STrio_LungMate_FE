{"ast":null,"code":"import _objectSpread from\"D:/Medical AI/2nd_project_STrio/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import AuthLayout from'../../components/AuthLayout';import instance from\"services/api/client\";import{useAuth}from\"../../components/AuthProvider\";import styles from'./Auth.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(_ref){let{onLogin,onNavigate}=_ref;const[error,setError]=useState('');const[inputs,setInputs]=useState({userId:\"\",passwd:\"\"});const handleValueChange=e=>{setInputs(prev=>_objectSpread(_objectSpread({},prev),{},{[e.target.name]:e.target.value}));};const{userId,passwd}=inputs;const{login}=useAuth();const onSubmit=async e=>{e.preventDefault();try{await instance.post(\"/login\",inputs).then(response=>{console.log(response);//응답 헤더에서 토큰 추출\nconst accessToken=response.headers[\"authorization\"];const refreshToken=response.headers[\"authorization-refresh\"];console.log(\"accessToken => \",accessToken);console.log(\"refreshToken => \",refreshToken);localStorage.setItem(\"Authorization\",accessToken);localStorage.setItem(\"Authorization-refresh\",refreshToken);localStorage.setItem(\"userId\",response.data.userId);localStorage.setItem(\"userName\",response.data.userName);localStorage.setItem(\"roleCd\",response.data.roleCd);localStorage.setItem(\"email\",response.data.email);localStorage.setItem(\"isLogin\",true);return response;}).then(response=>{login();setInputs({userId:\"\",passwd:\"\"});const userData={memberId:response.data.userId,memberName:response.data.userName,role:response.data.roleCd,email:response.data.email};onLogin(userData);}).catch(error=>{if(error.response&&error.response.status===401){setError(\"아이디 또는 비밀번호가 일치하지 않습니다.\");}else{setError(\"로그인 중 오류가 발생했습니다.\");}});}catch(err){alert(\"로그인 실패2 : 아이디 또는 비밀번호 확인\");}};return/*#__PURE__*/_jsxs(AuthLayout,{title:\"\\uB85C\\uADF8\\uC778\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",className:styles.formLabel,children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{id:\"username\",type:\"text\",name:\"userId\",className:styles.formInput,value:userId,onChange:handleValueChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:styles.formLabel,children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{id:\"password\",type:\"password\",name:\"passwd\",className:styles.formInput,value:passwd,onChange:handleValueChange})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:styles.errorMessage,children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.btnPrimary,children:\"\\uB85C\\uADF8\\uC778\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>onNavigate('signup'),className:styles.linkPrimary,children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.divider,children:\"|\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onNavigate('find-account'),className:styles.linkPrimary,children:\"\\uC544\\uC774\\uB514/\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"})]})]});}export default Login;","map":{"version":3,"names":["React","useState","AuthLayout","instance","useAuth","styles","jsx","_jsx","jsxs","_jsxs","Login","_ref","onLogin","onNavigate","error","setError","inputs","setInputs","userId","passwd","handleValueChange","e","prev","_objectSpread","target","name","value","login","onSubmit","preventDefault","post","then","response","console","log","accessToken","headers","refreshToken","localStorage","setItem","data","userName","roleCd","email","userData","memberId","memberName","role","catch","status","err","alert","title","children","className","htmlFor","formLabel","id","type","formInput","onChange","errorMessage","btnPrimary","onClick","linkPrimary","divider"],"sources":["D:/Medical AI/2nd_project_STrio/frontend/src/features/auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AuthLayout from '../../components/AuthLayout';\r\nimport instance from \"services/api/client\";\r\nimport { useAuth } from \"../../components/AuthProvider\";\r\nimport styles from './Auth.module.css';\r\n\r\nfunction Login({ onLogin, onNavigate }) {\r\n    const [error, setError] = useState('');\r\n    \r\n    const [inputs, setInputs] = useState({\r\n        userId: \"\",\r\n        passwd: \"\",\r\n    });\r\n    \r\n    const handleValueChange = (e) => {\r\n        setInputs((prev) => ({\r\n        ...prev,\r\n        [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n  \r\n    const { userId, passwd } = inputs;\r\n    const { login } = useAuth();    \r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await instance\r\n                .post(`/login`, inputs)\r\n                .then((response) => {\r\n                console.log(response);\r\n\r\n                //응답 헤더에서 토큰 추출\r\n                const accessToken = response.headers[\"authorization\"];\r\n                const refreshToken = response.headers[\"authorization-refresh\"];\r\n\r\n                console.log(\"accessToken => \", accessToken);\r\n                console.log(\"refreshToken => \", refreshToken);\r\n\r\n                localStorage.setItem(\"Authorization\", accessToken);\r\n                localStorage.setItem(\"Authorization-refresh\", refreshToken);\r\n\r\n                localStorage.setItem(\"userId\", response.data.userId);\r\n                localStorage.setItem(\"userName\", response.data.userName);\r\n                localStorage.setItem(\"roleCd\", response.data.roleCd);\r\n                localStorage.setItem(\"email\", response.data.email);\r\n                localStorage.setItem(\"isLogin\", true);\r\n                return response;\r\n                })\r\n                .then((response) => {\r\n                    login();\r\n                    setInputs({ userId: \"\", passwd: \"\" });\r\n                    const userData = {\r\n                        memberId: response.data.userId,\r\n                        memberName: response.data.userName,\r\n                        role: response.data.roleCd,\r\n                        email: response.data.email,\r\n                    };                    \r\n                    onLogin(userData);\r\n                })\r\n                .catch((error) => {\r\n                      if (error.response && error.response.status === 401) {\r\n                          setError(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\r\n                      } else {\r\n                          setError(\"로그인 중 오류가 발생했습니다.\");\r\n                      }\r\n                });\r\n        } catch (err) {\r\n            alert(\"로그인 실패2 : 아이디 또는 비밀번호 확인\");\r\n        }\r\n    };    \r\n\r\n    return (\r\n        <AuthLayout title=\"로그인\">\r\n            <form onSubmit={onSubmit} className=\"space-y-6\">\r\n                <div>\r\n                    <label htmlFor=\"username\" className={styles.formLabel}>아이디</label>\r\n                    <input\r\n                        id=\"username\"\r\n                        type=\"text\"\r\n                        name=\"userId\"\r\n                        className={styles.formInput}\r\n                        value={userId}\r\n                        onChange={handleValueChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\" className={styles.formLabel}>비밀번호</label>\r\n                    <input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        name=\"passwd\"\r\n                        className={styles.formInput}\r\n                        value={passwd}\r\n                        onChange={handleValueChange}\r\n                    />\r\n                </div>\r\n                {error && <p className={styles.errorMessage}>{error}</p>}\r\n                \r\n                <button type=\"submit\" className={styles.btnPrimary}>\r\n                    로그인\r\n                </button>\r\n            </form>\r\n\r\n            <div className=\"text-center mt-6\">\r\n                <button \r\n                    onClick={() => onNavigate('signup')} \r\n                    className={styles.linkPrimary}\r\n                >\r\n                    회원가입\r\n                </button>\r\n                <span className={styles.divider}>|</span>\r\n                <button \r\n                    onClick={() => onNavigate('find-account')} \r\n                    className={styles.linkPrimary}\r\n                >\r\n                    아이디/비밀번호 찾기\r\n                </button>\r\n            </div>\r\n        </AuthLayout>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}