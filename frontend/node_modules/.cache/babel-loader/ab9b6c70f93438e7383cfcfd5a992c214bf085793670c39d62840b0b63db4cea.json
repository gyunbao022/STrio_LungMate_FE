{"ast":null,"code":"import{useEffect,useRef}from\"react\";import instance from\"services/api/client\";const Logout=_ref=>{let{onNavigate,onLogout}=_ref;const hasRun=useRef(false);useEffect(()=>{if(hasRun.current)return;hasRun.current=true;const handleLogout=async()=>{console.log(\"logout start\");const userId=localStorage.getItem(\"userId\");console.log(\"logout userId =>\",userId);const config={headers:{\"Content-Type\":\"application/json\",Authorization:localStorage.getItem(\"Authorization\"),\"Authorization-refresh\":localStorage.getItem(\"Authorization-refresh\")}};try{await instance.delete(\"/member/logout\",config);}catch(error){console.warn(\"logout 실패 =>\",error.message);}localStorage.clear();onLogout();onNavigate(\"main\");console.log(\"logout 완료, 메인 페이지 이동\");};handleLogout();},[onNavigate,onLogout]);return null;};export default Logout;","map":{"version":3,"names":["useEffect","useRef","instance","Logout","_ref","onNavigate","onLogout","hasRun","current","handleLogout","console","log","userId","localStorage","getItem","config","headers","Authorization","delete","error","warn","message","clear"],"sources":["C:/web_ai/react-workspace/STrio_LungMate_FE/frontend/src/features/auth/Logout.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport instance from \"services/api/client\";\r\n\r\nconst Logout = ({ onNavigate, onLogout }) => {\r\n  const hasRun = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (hasRun.current) return;\r\n    hasRun.current = true;\r\n\r\n    const handleLogout = async () => {\r\n      console.log(\"logout start\");\r\n      const userId = localStorage.getItem(\"userId\");\r\n      console.log(\"logout userId =>\", userId);\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"Authorization\"),\r\n          \"Authorization-refresh\": localStorage.getItem(\"Authorization-refresh\"),\r\n        },\r\n      };\r\n\r\n      try {\r\n        await instance.delete(`/member/logout`, config);\r\n      } catch (error) {\r\n        console.warn(\"logout 실패 =>\", error.message);\r\n      }\r\n\r\n      localStorage.clear();\r\n      onLogout();\r\n      onNavigate(\"main\");\r\n\r\n      console.log(\"logout 완료, 메인 페이지 이동\");\r\n    };\r\n\r\n    handleLogout();\r\n  }, [onNavigate, onLogout]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Logout;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,MAAO,CAAAC,QAAQ,KAAM,qBAAqB,CAE1C,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAA8B,IAA7B,CAAEC,UAAU,CAAEC,QAAS,CAAC,CAAAF,IAAA,CACtC,KAAM,CAAAG,MAAM,CAAGN,MAAM,CAAC,KAAK,CAAC,CAE5BD,SAAS,CAAC,IAAM,CACd,GAAIO,MAAM,CAACC,OAAO,CAAE,OACpBD,MAAM,CAACC,OAAO,CAAG,IAAI,CAErB,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/BC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3B,KAAM,CAAAC,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC7CJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEC,MAAM,CAAC,CAEvC,KAAM,CAAAG,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCC,aAAa,CAAEJ,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CACpD,uBAAuB,CAAED,YAAY,CAACC,OAAO,CAAC,uBAAuB,CACvE,CACF,CAAC,CAED,GAAI,CACF,KAAM,CAAAZ,QAAQ,CAACgB,MAAM,kBAAmBH,MAAM,CAAC,CACjD,CAAE,MAAOI,KAAK,CAAE,CACdT,OAAO,CAACU,IAAI,CAAC,cAAc,CAAED,KAAK,CAACE,OAAO,CAAC,CAC7C,CAEAR,YAAY,CAACS,KAAK,CAAC,CAAC,CACpBhB,QAAQ,CAAC,CAAC,CACVD,UAAU,CAAC,MAAM,CAAC,CAElBK,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACrC,CAAC,CAEDF,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,CAACJ,UAAU,CAAEC,QAAQ,CAAC,CAAC,CAE1B,MAAO,KAAI,CACb,CAAC,CAED,cAAe,CAAAH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}