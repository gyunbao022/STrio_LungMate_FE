{"ast":null,"code":"var _jsxFileName = \"D:\\\\Medical AI\\\\2nd_project_STrio\\\\frontend\\\\src\\\\pages\\\\Notice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport api from '../token/interceptors';\nimport styles from '../styles/pages/Notice.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notice({\n  currentUser,\n  initialNotice\n}) {\n  _s();\n  const [selectedNotice, setSelectedNotice] = useState(initialNotice || null);\n  const [notices, setNotices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedNotice, setEditedNotice] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n\n  // 1. fetchNotices (useCallback 유지 - 올바른 코드)\n  const fetchNotices = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await api.get('/notice/list/1');\n      const sortedNotices = response.data.noticeList.sort((a, b) => b.noticeId - a.noticeId);\n      setNotices(sortedNotices);\n    } catch (error) {\n      console.error(\"공지사항을 불러오는 중 오류가 발생했습니다:\", error);\n      alert(\"공지사항을 불러오는 데 실패했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // 2. useEffect (useCallback 의존성 유지)\n  useEffect(() => {\n    fetchNotices();\n  }, [fetchNotices]);\n  useEffect(() => {\n    setSelectedNotice(initialNotice || null);\n  }, [initialNotice]);\n\n  // 실제 사용자 권한 체크 (role === 'A'는 관리자)\n  const isAdmin = currentUser && currentUser.role === 'A';\n\n  // 4. handleCreate, handleEdit (유지)\n  const handleCreate = () => {\n    setEditedNotice({\n      title: '',\n      cont: ''\n    });\n    setIsEditing(true);\n    setSelectedNotice(null);\n  };\n  const handleEdit = notice => {\n    setEditedNotice({\n      ...notice\n    });\n    setIsEditing(true);\n    setSelectedNotice(null);\n  };\n\n  // 5. handleDelete (유지 - 올바른 코드)\n  const handleDelete = async noticeId => {\n    if (window.confirm(\"정말로 이 공지사항을 삭제하시겠습니까?\")) {\n      setIsSaving(true);\n      try {\n        await api.delete(`/notice/delete/${noticeId}`);\n        alert(\"공지사항이 삭제되었습니다.\");\n        setSelectedNotice(null);\n        await fetchNotices(); // 목록 새로고침\n      } catch (error) {\n        console.error(\"공지사항 삭제 중 오류:\", error);\n        alert(\"삭제 중 오류가 발생했습니다.\");\n      } finally {\n        setIsSaving(false);\n      }\n    }\n  };\n  const handleSave = async e => {\n    e.preventDefault();\n    setIsSaving(true);\n\n    // 디버깅: 현재 사용자 정보 확인\n    console.log(\"=== 공지사항 저장 시작 ===\");\n    console.log(\"currentUser:\", currentUser);\n    console.log(\"localStorage userId:\", localStorage.getItem(\"userId\"));\n    console.log(\"localStorage memberName:\", localStorage.getItem(\"memberName\"));\n    console.log(\"localStorage roleCd:\", localStorage.getItem(\"roleCd\"));\n    console.log(\"localStorage Authorization:\", localStorage.getItem(\"Authorization\"));\n    const isNew = !editedNotice.noticeId;\n    const formData = new FormData();\n    formData.append('title', editedNotice.title);\n    formData.append('cont', editedNotice.cont);\n\n    // 로그인된 사용자 ID 확인\n    if (!currentUser || !currentUser.memberId) {\n      console.error(\"로그인 정보를 찾을 수 없습니다! currentUser:\", currentUser);\n      alert(\"로그인 정보가 없어 저장할 수 없습니다. 다시 로그인해주세요.\");\n      setIsSaving(false);\n      return;\n    }\n\n    // memberId를 전송 (백엔드에서 필요한 필드명 확인 필요)\n    formData.append('memberId', currentUser.memberId);\n    console.log(\"전송할 데이터:\");\n    console.log(\"- title:\", editedNotice.title);\n    console.log(\"- cont:\", editedNotice.cont);\n    console.log(\"- memberId:\", currentUser.memberId);\n    console.log(\"- isNew:\", isNew);\n    try {\n      if (isNew) {\n        console.log(\"새 공지사항 작성 API 호출...\");\n        const response = await api.post('/notice/write', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log(\"작성 성공:\", response.data);\n        alert('공지사항이 성공적으로 작성되었습니다.');\n      } else {\n        formData.append('noticeId', editedNotice.noticeId);\n        console.log(\"공지사항 수정 API 호출... noticeId:\", editedNotice.noticeId);\n        const response = await api.put('/notice/update', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log(\"수정 성공:\", response.data);\n        alert('공지사항이 성공적으로 수정되었습니다.');\n      }\n      setIsEditing(false);\n      setEditedNotice(null);\n      setSelectedNotice(null);\n      await fetchNotices(); // 목록 새로고침\n    } catch (error) {\n      console.error(\"=== 공지사항 저장 실패 ===\");\n      console.error(\"에러 객체:\", error);\n      console.error(\"에러 응답:\", error.response);\n      console.error(\"에러 요청:\", error.request);\n      console.error(\"에러 메시지:\", error.message);\n      if (error.response) {\n        const status = error.response.status;\n        const data = error.response.data;\n        console.error(\"HTTP 상태 코드:\", status);\n        console.error(\"응답 데이터:\", data);\n        if (status === 403) {\n          alert(\"저장 권한이 없습니다. 관리자 계정으로 로그인해주세요.\");\n        } else if (status === 401) {\n          alert(\"인증이 만료되었습니다. 다시 로그인해주세요.\");\n        } else if (status === 500) {\n          alert(`서버 내부 오류가 발생했습니다.\\n오류 내용: ${data.message || '알 수 없는 오류'}`);\n        } else if (status === 400) {\n          alert(`잘못된 요청입니다.\\n오류 내용: ${data.message || '입력값을 확인해주세요.'}`);\n        } else {\n          alert(`저장 중 오류가 발생했습니다. (${status})\\n${data.message || ''}`);\n        }\n      } else if (error.request) {\n        console.error(\"요청이 전송되었으나 응답을 받지 못함\");\n        alert(\"서버와 연결할 수 없습니다. 네트워크 연결을 확인해주세요.\");\n      } else {\n        console.error(\"요청 설정 중 오류 발생\");\n        alert(\"저장 중 오류가 발생했습니다.\");\n      }\n    } finally {\n      setIsSaving(false);\n      console.log(\"=== 공지사항 저장 종료 ===\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingText,\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), isAdmin && !isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        className: styles.createButton,\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSave,\n      className: styles.editForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedNotice.title,\n        onChange: e => setEditedNotice({\n          ...editedNotice,\n          title: e.target.value\n        }),\n        placeholder: \"\\uC81C\\uBAA9\",\n        className: styles.formInput,\n        required: true,\n        disabled: isSaving\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedNotice.cont,\n        onChange: e => setEditedNotice({\n          ...editedNotice,\n          cont: e.target.value\n        }),\n        placeholder: \"\\uB0B4\\uC6A9\",\n        className: styles.formTextarea,\n        required: true,\n        disabled: isSaving\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formActions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setIsEditing(false),\n          className: styles.formCancelButton,\n          disabled: isSaving,\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.formSaveButton,\n          disabled: isSaving,\n          children: isSaving ? '저장 중...' : '저장'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this) : selectedNotice ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.detailContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.detailTitle,\n        children: selectedNotice.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.detailMeta,\n        children: [\"\\uC791\\uC131\\uC77C: \", new Date(selectedNotice.createdAt).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.detailContent,\n        children: selectedNotice.cont\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.detailActions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedNotice(null),\n          className: styles.backButton,\n          children: \"\\uBAA9\\uB85D\\uC73C\\uB85C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.adminActions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(selectedNotice),\n            className: styles.editButton,\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(selectedNotice.noticeId),\n            className: styles.deleteButton,\n            disabled: isSaving,\n            children: isSaving ? '삭제 중...' : '삭제'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tableContainer,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: styles.tableHead,\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"\\uC81C\\uBAA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"\\uC791\\uC131\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: notices.map(notice => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: styles.tableRow,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: notice.noticeId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectedNotice(notice),\n                className: styles.tableButton,\n                children: notice.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(notice.createdAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 37\n            }, this)]\n          }, notice.noticeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n}\n_s(Notice, \"xFs5y1yoyNmMRUOFuS0WH57uY/8=\");\n_c = Notice;\nexport default Notice;\nvar _c;\n$RefreshReg$(_c, \"Notice\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","api","styles","jsxDEV","_jsxDEV","Notice","currentUser","initialNotice","_s","selectedNotice","setSelectedNotice","notices","setNotices","loading","setLoading","isEditing","setIsEditing","editedNotice","setEditedNotice","isSaving","setIsSaving","fetchNotices","response","get","sortedNotices","data","noticeList","sort","a","b","noticeId","error","console","alert","isAdmin","role","handleCreate","title","cont","handleEdit","notice","handleDelete","window","confirm","delete","handleSave","e","preventDefault","log","localStorage","getItem","isNew","formData","FormData","append","memberId","post","headers","put","request","message","status","className","loadingText","children","fileName","_jsxFileName","lineNumber","columnNumber","container","header","onClick","createButton","onSubmit","editForm","type","value","onChange","target","placeholder","formInput","required","disabled","formTextarea","formActions","formCancelButton","formSaveButton","detailContainer","detailTitle","detailMeta","Date","createdAt","toLocaleDateString","detailContent","detailActions","backButton","adminActions","editButton","deleteButton","tableContainer","table","tableHead","scope","map","tableRow","tableButton","_c","$RefreshReg$"],"sources":["D:/Medical AI/2nd_project_STrio/frontend/src/pages/Notice.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport api from '../token/interceptors';\r\nimport styles from '../styles/pages/Notice.module.css';\r\n\r\nfunction Notice({ currentUser, initialNotice }) {\r\n    const [selectedNotice, setSelectedNotice] = useState(initialNotice || null);\r\n    const [notices, setNotices] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editedNotice, setEditedNotice] = useState(null);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    // 1. fetchNotices (useCallback 유지 - 올바른 코드)\r\n    const fetchNotices = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await api.get('/notice/list/1');\r\n            const sortedNotices = response.data.noticeList.sort((a, b) => b.noticeId - a.noticeId);\r\n            setNotices(sortedNotices);\r\n        } catch (error) {\r\n            console.error(\"공지사항을 불러오는 중 오류가 발생했습니다:\", error);\r\n            alert(\"공지사항을 불러오는 데 실패했습니다.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []); \r\n\r\n    // 2. useEffect (useCallback 의존성 유지)\r\n    useEffect(() => {\r\n        fetchNotices();\r\n    }, [fetchNotices]); \r\n\r\n    useEffect(() => {\r\n        setSelectedNotice(initialNotice || null);\r\n    }, [initialNotice]);\r\n\r\n    // 실제 사용자 권한 체크 (role === 'A'는 관리자)\r\n    const isAdmin = currentUser && currentUser.role === 'A';\r\n\r\n    // 4. handleCreate, handleEdit (유지)\r\n    const handleCreate = () => {\r\n        setEditedNotice({ title: '', cont: '' });\r\n        setIsEditing(true);\r\n        setSelectedNotice(null);\r\n    };\r\n\r\n    const handleEdit = (notice) => {\r\n        setEditedNotice({ ...notice });\r\n        setIsEditing(true);\r\n        setSelectedNotice(null);\r\n    };\r\n\r\n    // 5. handleDelete (유지 - 올바른 코드)\r\n    const handleDelete = async (noticeId) => {\r\n        if (window.confirm(\"정말로 이 공지사항을 삭제하시겠습니까?\")) {\r\n            setIsSaving(true); \r\n            try {\r\n                await api.delete(`/notice/delete/${noticeId}`);\r\n                alert(\"공지사항이 삭제되었습니다.\");\r\n                setSelectedNotice(null);\r\n                await fetchNotices(); // 목록 새로고침\r\n            } catch (error) {\r\n                console.error(\"공지사항 삭제 중 오류:\", error);\r\n                alert(\"삭제 중 오류가 발생했습니다.\");\r\n            } finally {\r\n                setIsSaving(false); \r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSave = async (e) => {\r\n        e.preventDefault();\r\n        setIsSaving(true); \r\n\r\n        // 디버깅: 현재 사용자 정보 확인\r\n        console.log(\"=== 공지사항 저장 시작 ===\");\r\n        console.log(\"currentUser:\", currentUser);\r\n        console.log(\"localStorage userId:\", localStorage.getItem(\"userId\"));\r\n        console.log(\"localStorage memberName:\", localStorage.getItem(\"memberName\"));\r\n        console.log(\"localStorage roleCd:\", localStorage.getItem(\"roleCd\"));\r\n        console.log(\"localStorage Authorization:\", localStorage.getItem(\"Authorization\"));\r\n\r\n        const isNew = !editedNotice.noticeId;\r\n        const formData = new FormData();\r\n        formData.append('title', editedNotice.title);\r\n        formData.append('cont', editedNotice.cont);\r\n\r\n        // 로그인된 사용자 ID 확인\r\n        if (!currentUser || !currentUser.memberId) {\r\n            console.error(\"로그인 정보를 찾을 수 없습니다! currentUser:\", currentUser);\r\n            alert(\"로그인 정보가 없어 저장할 수 없습니다. 다시 로그인해주세요.\");\r\n            setIsSaving(false);\r\n            return;\r\n        }\r\n        \r\n        // memberId를 전송 (백엔드에서 필요한 필드명 확인 필요)\r\n        formData.append('memberId', currentUser.memberId);\r\n        \r\n        console.log(\"전송할 데이터:\");\r\n        console.log(\"- title:\", editedNotice.title);\r\n        console.log(\"- cont:\", editedNotice.cont);\r\n        console.log(\"- memberId:\", currentUser.memberId);\r\n        console.log(\"- isNew:\", isNew);\r\n\r\n        try {\r\n            if (isNew) {\r\n                console.log(\"새 공지사항 작성 API 호출...\");\r\n                const response = await api.post('/notice/write', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                console.log(\"작성 성공:\", response.data);\r\n                alert('공지사항이 성공적으로 작성되었습니다.');\r\n            } else {\r\n                formData.append('noticeId', editedNotice.noticeId);\r\n                console.log(\"공지사항 수정 API 호출... noticeId:\", editedNotice.noticeId);\r\n                const response = await api.put('/notice/update', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                console.log(\"수정 성공:\", response.data);\r\n                alert('공지사항이 성공적으로 수정되었습니다.');\r\n            }\r\n\r\n            setIsEditing(false);\r\n            setEditedNotice(null);\r\n            setSelectedNotice(null);\r\n            await fetchNotices(); // 목록 새로고침\r\n\r\n        } catch (error) {\r\n            console.error(\"=== 공지사항 저장 실패 ===\");\r\n            console.error(\"에러 객체:\", error);\r\n            console.error(\"에러 응답:\", error.response);\r\n            console.error(\"에러 요청:\", error.request);\r\n            console.error(\"에러 메시지:\", error.message);\r\n            \r\n            if (error.response) {\r\n                const status = error.response.status;\r\n                const data = error.response.data;\r\n                \r\n                console.error(\"HTTP 상태 코드:\", status);\r\n                console.error(\"응답 데이터:\", data);\r\n                \r\n                if (status === 403) {\r\n                    alert(\"저장 권한이 없습니다. 관리자 계정으로 로그인해주세요.\");\r\n                } else if (status === 401) {\r\n                    alert(\"인증이 만료되었습니다. 다시 로그인해주세요.\");\r\n                } else if (status === 500) {\r\n                    alert(`서버 내부 오류가 발생했습니다.\\n오류 내용: ${data.message || '알 수 없는 오류'}`);\r\n                } else if (status === 400) {\r\n                    alert(`잘못된 요청입니다.\\n오류 내용: ${data.message || '입력값을 확인해주세요.'}`);\r\n                } else {\r\n                    alert(`저장 중 오류가 발생했습니다. (${status})\\n${data.message || ''}`);\r\n                }\r\n            } else if (error.request) {\r\n                console.error(\"요청이 전송되었으나 응답을 받지 못함\");\r\n                alert(\"서버와 연결할 수 없습니다. 네트워크 연결을 확인해주세요.\");\r\n            } else {\r\n                console.error(\"요청 설정 중 오류 발생\");\r\n                alert(\"저장 중 오류가 발생했습니다.\");\r\n            }\r\n        } finally {\r\n            setIsSaving(false);\r\n            console.log(\"=== 공지사항 저장 종료 ===\");\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className={styles.loadingText}>로딩 중...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.header}>\r\n                <h1 className={styles.title}>공지사항</h1>\r\n                {isAdmin && !isEditing && (\r\n                    <button onClick={handleCreate} className={styles.createButton}>\r\n                        글쓰기\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {isEditing ? (\r\n                <form onSubmit={handleSave} className={styles.editForm}>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={editedNotice.title}\r\n                        onChange={(e) => setEditedNotice({ ...editedNotice, title: e.target.value })}\r\n                        placeholder=\"제목\" \r\n                        className={styles.formInput}\r\n                        required \r\n                        disabled={isSaving} \r\n                    />\r\n                    <textarea \r\n                        value={editedNotice.cont}\r\n                        onChange={(e) => setEditedNotice({ ...editedNotice, cont: e.target.value })}\r\n                        placeholder=\"내용\" \r\n                        className={styles.formTextarea}\r\n                        required \r\n                        disabled={isSaving} \r\n                    />\r\n                    <div className={styles.formActions}>\r\n                        <button type=\"button\" onClick={() => setIsEditing(false)}\r\n                            className={styles.formCancelButton}\r\n                            disabled={isSaving}> \r\n                            취소\r\n                        </button>\r\n                        <button type=\"submit\"\r\n                            className={styles.formSaveButton}\r\n                            disabled={isSaving}>\r\n                            {isSaving ? '저장 중...' : '저장'} \r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            ) : selectedNotice ? (\r\n                <div className={styles.detailContainer}>\r\n                    <h2 className={styles.detailTitle}>{selectedNotice.title}</h2>\r\n                    <p className={styles.detailMeta}>\r\n                        작성일: {new Date(selectedNotice.createdAt).toLocaleDateString()}\r\n                    </p>\r\n                    <div className={styles.detailContent}>\r\n                        {selectedNotice.cont}\r\n                    </div>\r\n                    <div className={styles.detailActions}>\r\n                        <button onClick={() => setSelectedNotice(null)}\r\n                            className={styles.backButton}>\r\n                            목록으로\r\n                        </button>\r\n                        {isAdmin && (\r\n                            <div className={styles.adminActions}>\r\n                                <button onClick={() => handleEdit(selectedNotice)}\r\n                                    className={styles.editButton}>\r\n                                    수정\r\n                                </button>\r\n                                <button onClick={() => handleDelete(selectedNotice.noticeId)}\r\n                                    className={styles.deleteButton}\r\n                                    disabled={isSaving}> \r\n                                    {isSaving ? '삭제 중...' : '삭제'}\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className={styles.tableContainer}>\r\n                    <table className={styles.table}>\r\n                        <thead className={styles.tableHead}>\r\n                            <tr>\r\n                                <th scope=\"col\">번호</th>\r\n                                <th scope=\"col\">제목</th>\r\n                                <th scope=\"col\">작성일</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {notices.map(notice => (\r\n                                <tr key={notice.noticeId} className={styles.tableRow}>\r\n                                    <td>{notice.noticeId}</td>\r\n                                    <td>\r\n                                        <button onClick={() => setSelectedNotice(notice)} className={styles.tableButton}>\r\n                                            {notice.title}\r\n                                        </button>\r\n                                    </td>\r\n                                    <td>{new Date(notice.createdAt).toLocaleDateString()}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}