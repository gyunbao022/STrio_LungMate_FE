{"ast":null,"code":"import _objectSpread from\"D:/Medical AI/2nd_project_STrio/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import AuthLayout from'../../components/AuthLayout';import instance from\"services/api/client\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SignUp(_ref){let{onNavigate}=_ref;const[confirmPassword,setConfirmPassword]=useState('');const[error,setError]=useState('');const[members,setMembers]=useState({userId:\"\",passwd:\"\",userName:\"\",email:\"\"});const handleValueChange=e=>{setMembers(prev=>{return _objectSpread(_objectSpread({},prev),{},{[e.target.name]:e.target.value});});};const onSubmit=async e=>{e.preventDefault();setError('');if(!members.userId||!members.passwd||!members.userName||!members.email){setError(\"모든 항목을 입력해주세요.\");return;}if(members.passwd!==confirmPassword){setError(\"비밀번호가 일치하지 않습니다.\");return;}await instance.post(\"/member/signup\",members).then(response=>{console.log(response.data);onNavigate('login');}).catch(error=>{console.log(\"signup 오류:\",error.message);});};const inputStyles=\"w-full p-2 bg-gray-700 rounded mt-1 border border-gray-600 focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50\";return/*#__PURE__*/_jsxs(AuthLayout,{title:\"\\uD68C\\uC6D0\\uAC00\\uC785\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-300\",children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"userId\",value:members.userId,onChange:handleValueChange,className:inputStyles})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-300\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"passwd\",value:members.passwd,onChange:handleValueChange,className:inputStyles})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-300\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),className:inputStyles})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-300\",children:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"userName\",value:members.userName,onChange:handleValueChange,className:inputStyles})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-300\",children:\"\\uC774\\uBA54\\uC77C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:members.email,onChange:handleValueChange,className:inputStyles})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-400 text-center text-sm pt-2\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full bg-green-600 py-2 mt-4 rounded hover:bg-green-700 font-bold transition-colors duration-200\",children:\"\\uAC00\\uC785\\uD558\\uAE30\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>onNavigate('login'),className:\"text-sm text-blue-400 hover:underline\",children:\"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uC73C\\uC2E0\\uAC00\\uC694? \\uB85C\\uADF8\\uC778\"})})]});}export default SignUp;","map":{"version":3,"names":["React","useState","AuthLayout","instance","jsx","_jsx","jsxs","_jsxs","SignUp","_ref","onNavigate","confirmPassword","setConfirmPassword","error","setError","members","setMembers","userId","passwd","userName","email","handleValueChange","e","prev","_objectSpread","target","name","value","onSubmit","preventDefault","post","then","response","console","log","data","catch","message","inputStyles","title","children","className","type","onChange","onClick"],"sources":["D:/Medical AI/2nd_project_STrio/frontend/src/features/auth/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AuthLayout from '../../components/AuthLayout';\r\nimport instance from \"services/api/client\";\r\n\r\nfunction SignUp({ onNavigate }) {\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    \r\n    const [members, setMembers] = useState({\r\n        userId: \"\",\r\n        passwd: \"\",\r\n        userName: \"\",\r\n        email: \"\",\r\n    });    \r\n\r\n    const handleValueChange = (e) => {\r\n        setMembers((prev) => {\r\n        return { ...prev, [e.target.name]: e.target.value };\r\n        });\r\n    };    \r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        if (!members.userId || !members.passwd || !members.userName || !members.email) {\r\n            setError(\"모든 항목을 입력해주세요.\");\r\n            return;\r\n        }\r\n        if (members.passwd !== confirmPassword) {\r\n            setError(\"비밀번호가 일치하지 않습니다.\");\r\n            return;\r\n        }\r\n        \r\n        await instance\r\n        .post(`/member/signup`, members)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            onNavigate('login');\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"signup 오류:\", error.message);\r\n        });\r\n    };\r\n    \r\n    const inputStyles = \"w-full p-2 bg-gray-700 rounded mt-1 border border-gray-600 focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50\";\r\n\r\n    return (\r\n        <AuthLayout title=\"회원가입\">\r\n            <form onSubmit={onSubmit} className=\"space-y-4\">\r\n                <div>\r\n                    <label className=\"block text-sm font-medium text-gray-300\">아이디</label>\r\n                    <input type=\"text\" name=\"userId\" value={members.userId} onChange={handleValueChange} className={inputStyles} />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block text-sm font-medium text-gray-300\">비밀번호</label>\r\n                    <input type=\"password\" name=\"passwd\" value={members.passwd} onChange={handleValueChange} className={inputStyles} />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block text-sm font-medium text-gray-300\">비밀번호 확인</label>\r\n                    <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} className={inputStyles} />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block text-sm font-medium text-gray-300\">이름</label>\r\n                    <input type=\"text\" name=\"userName\" value={members.userName} onChange={handleValueChange} className={inputStyles} />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block text-sm font-medium text-gray-300\">이메일</label>\r\n                    <input type=\"email\" name=\"email\" value={members.email} onChange={handleValueChange} className={inputStyles} />\r\n                </div>\r\n\r\n                {error && <p className=\"text-red-400 text-center text-sm pt-2\">{error}</p>}\r\n                \r\n                <button type=\"submit\" className=\"w-full bg-green-600 py-2 mt-4 rounded hover:bg-green-700 font-bold transition-colors duration-200\">\r\n                    가입하기\r\n                </button>\r\n            </form>\r\n            <div className=\"text-center mt-6\">\r\n                <button onClick={() => onNavigate('login')} className=\"text-sm text-blue-400 hover:underline\">\r\n                    이미 계정이 있으신가요? 로그인\r\n                </button>\r\n            </div>\r\n        </AuthLayout>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}