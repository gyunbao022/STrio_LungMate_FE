{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import instance from\"../../token/interceptors\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPassword=_ref=>{let{onNavigate}=_ref;const[token,setToken]=useState(\"\");const[pwd,setPwd]=useState(\"\");const[pwd2,setPwd2]=useState(\"\");const[error,setError]=useState(\"\");const[ok,setOk]=useState(\"\");useEffect(()=>{const params=new URLSearchParams(window.location.search);const t=params.get(\"token\");setToken(t||\"\");if(!t)setError(\"유효하지 않은 접근입니다.(토큰 없음)\");},[]);const onSubmit=async e=>{e.preventDefault();setError(\"\");setOk(\"\");if(!token)return setError(\"토큰이 없습니다.\");if(!pwd||pwd.length<4)return setError(\"비밀번호는 4자 이상이어야 합니다.\");if(pwd!==pwd2)return setError(\"비밀번호가 일치하지 않습니다.\");try{const res=await instance.post(\"/member/resetPasswd\",{token,newPassword:pwd});setOk(res.data.message||\"비밀번호가 변경되었습니다. 로그인 해주세요.\");setTimeout(()=>onNavigate(\"login\"),2000);}catch(err){var _err$response,_err$response$data;const msg=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||\"처리 중 오류가 발생했습니다.\";setError(msg);}};const input=\"w-full p-2 bg-gray-700 rounded mt-1 border border-gray-600 focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50\";return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-md mx-auto mt-10 p-6 border border-gray-700 rounded\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",className:input,value:pwd,onChange:e=>setPwd(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",className:input,value:pwd2,onChange:e=>setPwd2(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full bg-blue-600 py-2 rounded hover:bg-blue-700 font-bold\",children:\"\\uBCC0\\uACBD\\uD558\\uAE30\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-400 text-center text-sm pt-2\",children:error}),ok&&/*#__PURE__*/_jsx(\"p\",{className:\"text-green-400 text-center text-sm pt-2\",children:ok})]});};export default ResetPassword;","map":{"version":3,"names":["React","useState","useEffect","instance","jsx","_jsx","jsxs","_jsxs","ResetPassword","_ref","onNavigate","token","setToken","pwd","setPwd","pwd2","setPwd2","error","setError","ok","setOk","params","URLSearchParams","window","location","search","t","get","onSubmit","e","preventDefault","length","res","post","newPassword","data","message","setTimeout","err","_err$response","_err$response$data","msg","response","input","className","children","type","placeholder","value","onChange","target"],"sources":["C:/web_ai/react-workspace/STrio_LungMate_FE/frontend/src/features/auth/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport instance from \"../../token/interceptors\";\r\n\r\nconst ResetPassword = ({ onNavigate }) => {\r\n  const [token, setToken] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [pwd2, setPwd2] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ok, setOk] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const t = params.get(\"token\");\r\n    setToken(t || \"\");\r\n    if (!t) setError(\"유효하지 않은 접근입니다.(토큰 없음)\");\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setOk(\"\");\r\n\r\n    if (!token) return setError(\"토큰이 없습니다.\");\r\n    if (!pwd || pwd.length < 4) return setError(\"비밀번호는 4자 이상이어야 합니다.\");\r\n    if (pwd !== pwd2) return setError(\"비밀번호가 일치하지 않습니다.\");\r\n\r\n    try {\r\n      const res = await instance.post(\"/member/resetPasswd\", { token, newPassword: pwd });\r\n      setOk(res.data.message || \"비밀번호가 변경되었습니다. 로그인 해주세요.\");\r\n      setTimeout(() => onNavigate(\"login\"), 2000);\r\n    } catch (err) {\r\n      const msg = err.response?.data?.message || \"처리 중 오류가 발생했습니다.\";\r\n      setError(msg);\r\n    }\r\n  };\r\n\r\n  const input = \"w-full p-2 bg-gray-700 rounded mt-1 border border-gray-600 focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50\";\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-6 border border-gray-700 rounded\">\r\n      <h2 className=\"text-xl font-bold mb-4\">비밀번호 재설정</h2>\r\n      <form onSubmit={onSubmit} className=\"space-y-4\">\r\n        <input type=\"password\" placeholder=\"새 비밀번호\" className={input}\r\n               value={pwd} onChange={e => setPwd(e.target.value)} />\r\n        <input type=\"password\" placeholder=\"새 비밀번호 확인\" className={input}\r\n               value={pwd2} onChange={e => setPwd2(e.target.value)} />\r\n        <button type=\"submit\" className=\"w-full bg-blue-600 py-2 rounded hover:bg-blue-700 font-bold\">\r\n          변경하기\r\n        </button>\r\n      </form>\r\n      {error && <p className=\"text-red-400 text-center text-sm pt-2\">{error}</p>}\r\n      {ok && <p className=\"text-green-400 text-center text-sm pt-2\">{ok}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}